<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TabbedMDIManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="TabbedMDIManager1.ContextMenuItem" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAF9TeW5jZnVzaW9uLlRvb2xzLldpbmRvd3MsIFZlcnNpb249MTAu
        MzAzLjAuMzAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49M2Q2N2VkMWY4N2Q0NGM4OQwD
        AAAAV1N5c3RlbS5XaW5kb3dzLkZvcm1zLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
        UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQUBAAAANFN5bmNmdXNpb24uV2luZG93cy5Gb3Jt
        cy5Ub29scy5YUE1lbnVzLlBhcmVudEJhckl0ZW0TAAAADUNhdGVnb3J5SW5kZXgHQ2hlY2tlZAdFbmFi
        bGVkCkltYWdlSW5kZXgKTWVyZ2VPcmRlcglNZXJnZVR5cGUKUGFpbnRTdHlsZQhTaG9ydGN1dARUZXh0
        B1Rvb2x0aXACSUQHTWFuYWdlchJEaXNhYmxlZEltYWdlSW5kZXgVSGlnaGxpZ2h0ZWRJbWFnZUluZGV4
        EFNlcGFyYXRvckluZGljZXMLUGFyZW50U3R5bGUMQ2xvc2VPbkNsaWNrD1VzZVBhcnRpYWxNZW51cwVJ
        dGVtcwAAAAAABAQEAQEBAgAAAwQAAAMIAQEICB5TeXN0ZW0uV2luZG93cy5Gb3Jtcy5NZW51TWVyZ2UD
        AAAAMVN5bmNmdXNpb24uV2luZG93cy5Gb3Jtcy5Ub29scy5YUE1lbnVzLlBhaW50U3R5bGUCAAAAHVN5
        c3RlbS5XaW5kb3dzLkZvcm1zLlNob3J0Y3V0AwAAAAgIHFN5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxp
        c3Q5U3luY2Z1c2lvbi5XaW5kb3dzLkZvcm1zLlRvb2xzLlhQTWVudXMuUGFyZW50QmFySXRlbVN0eWxl
        AgAAAAEBHFN5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxpc3QCAAAA/////wAB/////wAAAAAF/P///x5T
        eXN0ZW0uV2luZG93cy5Gb3Jtcy5NZW51TWVyZ2UBAAAAB3ZhbHVlX18ACAMAAAAAAAAABfv///8xU3lu
        Y2Z1c2lvbi5XaW5kb3dzLkZvcm1zLlRvb2xzLlhQTWVudXMuUGFpbnRTdHlsZQEAAAAHdmFsdWVfXwAI
        AgAAAAAAAAAF+v///x1TeXN0ZW0uV2luZG93cy5Gb3Jtcy5TaG9ydGN1dAEAAAAHdmFsdWVfXwAIAwAA
        AAAAAAAGBwAAAAAJBwAAAAkHAAAACv//////////CQgAAAAF9////zlTeW5jZnVzaW9uLldpbmRvd3Mu
        Rm9ybXMuVG9vbHMuWFBNZW51cy5QYXJlbnRCYXJJdGVtU3R5bGUBAAAAB3ZhbHVlX18ACAIAAAAAAAAA
        AQEJCgAAAAQIAAAAHFN5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxpc3QDAAAABl9pdGVtcwVfc2l6ZQhf
        dmVyc2lvbgUAAAgICQsAAAACAAAAAQAAAAEKAAAACAAAAAkMAAAABgAAAAEAAAAQCwAAAAIAAAAICAAA
        AAAICAQAAAAQDAAAAAYAAAAJDQAAAAkOAAAACQ8AAAAJEAAAAAkRAAAACRIAAAAFDQAAAC5TeW5jZnVz
        aW9uLldpbmRvd3MuRm9ybXMuVG9vbHMuWFBNZW51cy5CYXJJdGVtDgAAAA1DYXRlZ29yeUluZGV4B0No
        ZWNrZWQHRW5hYmxlZApJbWFnZUluZGV4Ck1lcmdlT3JkZXIJTWVyZ2VUeXBlClBhaW50U3R5bGUIU2hv
        cnRjdXQEVGV4dAdUb29sdGlwAklEB01hbmFnZXISRGlzYWJsZWRJbWFnZUluZGV4FUhpZ2hsaWdodGVk
        SW1hZ2VJbmRleAAAAAAABAQEAQEBAgAACAEBCAgeU3lzdGVtLldpbmRvd3MuRm9ybXMuTWVudU1lcmdl
        AwAAADFTeW5jZnVzaW9uLldpbmRvd3MuRm9ybXMuVG9vbHMuWFBNZW51cy5QYWludFN0eWxlAgAAAB1T
        eXN0ZW0uV2luZG93cy5Gb3Jtcy5TaG9ydGN1dAMAAAAICAIAAAD/////AAH/////AAAAAAHt/////P//
        /wAAAAAB7P////v///8AAAAAAev////6////AAAAAAYWAAAADU1vdmUgUHJldmlvdXMJBwAAAAkHAAAA
        Cv//////////AQ4AAAANAAAA/////wAB/////wAAAAAB6P////z///8AAAAAAef////7////AAAAAAHm
        ////+v///wAAAAAGGwAAAAlNb3ZlIE5leHQJBwAAAAkHAAAACv//////////AQ8AAAANAAAA/////wAB
        /////woAAAAB4/////z///8AAAAAAeL////7////AAAAAAHh////+v///wAAAAAGIAAAAAYmQ2xvc2UJ
        BwAAAAkHAAAACv//////////ARAAAAANAAAA/////wAB/////woAAAAB3v////z///8AAAAAAd3////7
        ////AAAAAAHc////+v///wAAAAAGJQAAAAdDJmFuY2VsCQcAAAAJBwAAAAr//////////wERAAAADQAA
        AP////8AAf////8KAAAAAdn////8////AAAAAAHY////+////wAAAAAB1/////r///8AAAAABioAAAAZ
        TmV3IEhvcmkmem9udGFsIFRhYiBHcm91cAkHAAAACQcAAAAK//////////8BEgAAAA0AAAD/////AAH/
        ////CgAAAAHU/////P///wAAAAAB0/////v///8AAAAAAdL////6////AAAAAAYvAAAAF05ldyAmVmVy
        dGljYWwgVGFiIEdyb3VwCQcAAAAJBwAAAAr//////////ws=
</value>
  </data>
</root>