<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
</style>
</head>

<h1>Sort Nodes</h1>

<p>This sample illustrates the implementation of sorting in a <strong>TreeViewAdv</strong> control. The 
<strong>TreeViewAdv</strong> control has enhanced sorting support through multiple 
properties of nodes.</p>

<p>Sorting nodes at any level is generally done on the basis of the <strong>SortOrder</strong> and 
<strong>SortType </strong>properties.</p>

<p><div align=center><img src="images/sample.png" alt="TreeViewAdv Sorting" title="" /></div></p>

<p><strong>Features:</strong></p>
<p><strong>Sort Order</strong></p>

<p class="style1">The<strong> TreeNodeAdvStyleInfo.SortOrder</strong> property indicates the order of sorting:
<em>ascending</em>, <em>descending</em>, or <em>none</em>.&nbsp;&nbsp;&nbsp;&nbsp; </p>

<p><strong>Sort Type</strong></p>

<p class="style1">The<strong> TreeNodeAdvStyleInfo.SortType </strong>property indicates whether nodes will be sorted by<strong> 
t</strong>ext, check box, 
or tag. </p>
<p><strong>Comparer</strong></p>

<p class="style1">The<strong> TreeNodeAdvStyleInfo.Comparer</strong> property is an object that implements the 
<strong>IComparer</strong> interface.</p>
<p><strong>Sort Method</strong></p>

<p class="style1">By calling the <strong>Sort</strong> method, the root nodes of the <strong>TreeViewAdv</strong> 
can be sorted as needed.</p>

<pre><p class="style1"><code>this.treeViewAdv1.Nodes.Sort();</code></p></pre>

<p><strong>SortWithChildNodes Property</strong></p>

<p class="style1">If a user wishes to sort all the nodes in the <strong>TreeViewAdv</strong>, including child nodes, then the
<strong>SortWithChildNodes</strong> property should be set
 to <em>true</em>, along with any of the other sort-order properties.</p>
<pre><code>
	this.treeViewAdv1.Root.SortOrder=SortOrder.Ascending;
	this.treeViewAdv1.SortWithChildNodes=true;
	this.treeViewAdv1.Root.Sort();
</code></pre>

</html>








