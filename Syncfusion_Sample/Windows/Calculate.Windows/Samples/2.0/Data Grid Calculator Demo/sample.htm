<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
</style>
</head>

<h1>Data Grid Calculator Demo</h1>

<p>This sample shows the implementation of the <strong>ICalcData</strong> on a
<strong>data grid</strong> object whose <strong>Datasource</strong> property is a 
data table. The class <b>CalcDataGrid</b> derives the data grid and implements the
<strong>ICalcData</strong>. </p>
<p><strong>Features</strong>:</p>

<p class="style1">The following image illustrates a form with a single instance of the <strong>CalcDataGrid</strong> being populated with data.</p>

<p><div align=center><img src="images//sample1.png" alt="CalcDataGrid that is capable of accepting Excel-Like formulas. screenshot" title="Calc Data Grid Can Accept MS Excel-Like Formulae." ></div>

<div align=center><b>Calc Data Grid</b></div></p>

<p>A<strong> CalcDataGrid</strong> tweaked to display any underlying formulae is illustrated below. Notice that in column B, changing the first cell affects all the other cells in that column.</p>

<p><div align=center><img src="images/sample2.png" alt="Calc Data Grid Displaying Formulae " title="Calc Data Grid Displaying Formulae" ></div>

<div align=center><b>Calc Data Grid Displaying Formulae</b></div></p>

<p>The <strong>ICalcData</strong> interface has only three methods and one event.<br>

<ul><li><b>Get Value Row Col</b>-Returns the data value at the given row or column</li>

<li><b>Set Value Row Col</b>-Sets the data value at a given row or column</li>

<li><b>Wire Parent Object</b>-Callback immediately after a <strong>CalcEngine</strong> object is created</li>

<li><b>Value Changed</b>-Event raised when a value is changed</li>
</ul></p>

<p>The implementation uses both the <strong>ListChanged </strong>event and the <strong>ColumnChanged </strong>event on the data source and raises the 
<strong>ValueChanged </strong>event at the appropriate point. </p>
<p>The <strong>WireParentObject</strong> is used to subscribe to these events. This is a typical use of the <b>WireParentObject</b> method. It gives the 
<strong>ICalcData</strong> object the opportunity to subscribe to the events that are necessary to monitor the changes in the object. </p>


<p>This sample also shows that it is possible to have multiple Windows Forms data 
grids in a table control to support a workbook-type application. You can even reference cells on different grids in a formula. </p>

<p>Multiple <strong>CalcDataGrids</strong> in a tab control are illustrated in the image below:</p>

<p><div align=center><img src="images//sample3.png" alt=" Workbook of Calc Data Grids " title="Workbook of Calc Data Grids" ></div>

<div align=center><b>Workbook of CalcDataGrids</b></div></p>
</html>