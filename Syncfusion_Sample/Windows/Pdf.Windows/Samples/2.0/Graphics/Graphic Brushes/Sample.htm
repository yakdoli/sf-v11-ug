<h1>Graphic Brushes</h1>
<h3>
    Features</h3>
<ul>
    <p>
	Essential PDF supports the following types of<strong> </strong> brushes that can be used to fill shapes.</br>
<ul>
<li><b>PDF Solid Brush</b></li>

<p>This type of brush simply fills the shape with a single color. You may set the color while constructing the brush.</p>

<li><b>PDF Tiling Brush</b></li>

<p>This is one of the complex brushes. It allows you to fill the shape's interior with a repetitive pattern. To create your own pattern, you should use the 
<strong>Graphics</strong> property to obtain a <strong>PDFGraphics</strong> class instance, which allows 
you to draw many graphic primitives.</p>

<li><b>PDF Linear Gradient Brush</b></li>

<p>This brush is very similar to the .NET Linear Gradient Brush. It has similar 
properties to specify blend colors and positions. Also, it requires a start and end position, relative to the current origin, to calculate gradient parameters and colors. 
Optionally, you may specify a rectangle <strong>LinearGradientMode</strong> or 
the angle from the 
x-axis.</p>

<li><b>PDF Radial Gradient Brush</b></li>

<p>This brush is similar to the previous one, but with one exception: the 
gradient is not linear, it is radial. This means, there are two circles with different center points and radii.</p>
</ul>
<p>This sample demonstrates Essential PDF's support for various graphics brushes.


<p>Given below is an image of the output.</p>
<div align=center><img src="images/GraphicBrushes.png" alt="PDF" title="" /></div>

<p>Here is the code snippet used in this sample:</p>
<code><pre>
//Draw shape with default brush
graphics.DrawEllipse(PdfBrushes.Red, rectangle);

//Draw shape with Solid brush
PdfSolidBrush brush = new PdfSolidBrush(Color.Black);
graphics.DrawEllipse(brush, rectangle);

//Draw shape with Tiling brush
PdfTilingBrush tillingBrush = new PdfTilingBrush(new SizeF(10, 10));
RectangleF rect = new RectangleF(0, 0, 10, 10);
tillingBrush.Graphics.DrawImage(image, 0, 0, 10, 10);
graphics.DrawEllipse(tillingBrush, rectangle);

//Draw shape with gradient brush
PdfColor color1 = Color.Red;
PdfColor color2 = Color.Yellow;
PdfGradientBrush gradientBrush = new PdfLinearGradientBrush(rectangle.Location, (PointF)rectangle.Size, color1, color2);
gradientBrush.AntiAlias = false;
gradientBrush.Background = Color.Green;
graphics.DrawEllipse(gradientBrush, rectangle);

//Draw shape with linear gradient brush
PdfLinearGradientBrush plgBrush = new PdfLinearGradientBrush(rectangle, color1, color2, PdfLinearGradientMode.BackwardDiagonal);
ellipse.Brush = plgBrush;
ellipse.Draw(graphics, PointF.Empty);

//Draw shape with radial gradient brush
PdfRadialGradientBrush prgBrush = new PdfRadialGradientBrush(centreStart, 10, centreEnd, 5, color1, color2);
graphics.DrawRectangle(prgBrush, testRectangle);
</pre></code>
</ul>

<h3>
    Interactive Features</h3>
	
<Ul>
  <li>Click the PDF button to generate the Pdf document.</li>
  <li>Click Yes on the message box to view the generated Pdf file.</li>
  <li>The displayed PDF file was created using Essential PDF source code.</li>
  <li>All features in the preceding list are illustrated in this file.</li>
</Ul>