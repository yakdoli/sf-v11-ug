#Region "Copyright Syncfusion Inc. 2001 - 2007"
'
'  Copyright Syncfusion Inc. 2001 - 2007. All rights reserved.
'
'  Use of this code is subject to the terms of our license.
'  A copy of the current license can be obtained at any time by e-mailing
'  licensing@syncfusion.com. Re-distribution in any form is strictly
'  prohibited. Any infringement will be prosecuted under applicable laws. 
'
#End Region


Imports Microsoft.VisualBasic
Imports System
Imports System.Drawing
Imports System.Drawing.Imaging
Imports System.Collections
Imports System.ComponentModel
Imports System.Windows.Forms
Imports System.Data
Imports System.IO
Imports Syncfusion.Pdf
Imports Syncfusion.Pdf.Graphics
Imports System.Text

Namespace EssentialPDFSamples
	''' <summary>
	''' Summary description for Form1.
	''' </summary>
    Public Class Form1 : Inherits System.Windows.Forms.Form
#Region "Private Members"
        Private WithEvents chbStamp As System.Windows.Forms.CheckBox
        Private WithEvents label1 As System.Windows.Forms.Label
        Private WithEvents button1 As System.Windows.Forms.Button
        Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
#End Region

#Region "Constructor"
        ''' <summary>
        ''' Required designer variable.
        ''' </summary>
        Private components As System.ComponentModel.Container = Nothing

        Public Sub New()
            '
            ' Required for Windows Form Designer support
            '
            InitializeComponent()
            Application.EnableVisualStyles()
            '
            ' TODO: Add any constructor code after InitializeComponent call
            ''
        End Sub

        ''' <summary>
        ''' Clean up any resources being used.
        ''' </summary>
        Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
            If disposing Then
                If Not components Is Nothing Then
                    components.Dispose()
                End If
            End If
            MyBase.Dispose(disposing)
        End Sub

#Region "Windows Form Designer generated code"
        ''' <summary>
        ''' Required method for Designer support - do not modify
        ''' the contents of this method with the code editor.
        ''' </summary>
        Private Sub InitializeComponent()
            Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(Form1))
            Me.chbStamp = New System.Windows.Forms.CheckBox
            Me.label1 = New System.Windows.Forms.Label
            Me.button1 = New System.Windows.Forms.Button
            Me.pictureBox1 = New System.Windows.Forms.PictureBox
            CType(Me.pictureBox1, System.ComponentModel.ISupportInitialize).BeginInit()
            Me.SuspendLayout()
            '
            'chbStamp
            '
            Me.chbStamp.AutoSize = True
            Me.chbStamp.Location = New System.Drawing.Point(8, 161)
            Me.chbStamp.Name = "chbStamp"
            Me.chbStamp.Size = New System.Drawing.Size(80, 17)
            Me.chbStamp.TabIndex = 27
            Me.chbStamp.Text = "Stamp PDF"
            Me.chbStamp.UseVisualStyleBackColor = True
            '
            'label1
            '
            Me.label1.Font = New System.Drawing.Font("Verdana", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
            Me.label1.ForeColor = System.Drawing.Color.FromArgb(CType(CType(0, Byte), Integer), CType(CType(0, Byte), Integer), CType(CType(64, Byte), Integer))
            Me.label1.Location = New System.Drawing.Point(0, 106)
            Me.label1.Name = "label1"
            Me.label1.Size = New System.Drawing.Size(373, 94)
            Me.label1.TabIndex = 29
            Me.label1.Text = "Click the button to view an PDF document generated by Essential PDF. Please note " & _
                "that Adobe Reader or its equivalent is required to view the resultant document."
            '
            'button1
            '
            Me.button1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
            Me.button1.BackColor = System.Drawing.Color.Transparent
            Me.button1.FlatAppearance.BorderColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(192, Byte), Integer), CType(CType(128, Byte), Integer))
            Me.button1.FlatAppearance.MouseDownBackColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(192, Byte), Integer))
            Me.button1.FlatAppearance.MouseOverBackColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(255, Byte), Integer), CType(CType(192, Byte), Integer))
            Me.button1.Image = CType(resources.GetObject("button1.Image"), System.Drawing.Image)
            Me.button1.ImageAlign = System.Drawing.ContentAlignment.MiddleRight
            Me.button1.Location = New System.Drawing.Point(285, 157)
            Me.button1.Name = "button1"
            Me.button1.Size = New System.Drawing.Size(75, 24)
            Me.button1.TabIndex = 28
            Me.button1.Text = "PDF"
            Me.button1.UseVisualStyleBackColor = False
            '
            'pictureBox1
            '
            Me.pictureBox1.Dock = System.Windows.Forms.DockStyle.Top
            Me.pictureBox1.Image = CType(resources.GetObject("pictureBox1.Image"), System.Drawing.Image)
            Me.pictureBox1.Location = New System.Drawing.Point(0, 0)
            Me.pictureBox1.Name = "pictureBox1"
            Me.pictureBox1.Size = New System.Drawing.Size(373, 93)
            Me.pictureBox1.TabIndex = 30
            Me.pictureBox1.TabStop = False
            '
            'Form1
            '
            Me.AutoScaleBaseSize = New System.Drawing.Size(5, 13)
            Me.BackColor = System.Drawing.Color.White
            Me.ClientSize = New System.Drawing.Size(373, 201)
            Me.Controls.Add(Me.button1)
            Me.Controls.Add(Me.pictureBox1)
            Me.Controls.Add(Me.chbStamp)
            Me.Controls.Add(Me.label1)
            Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle
            Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
            Me.MaximizeBox = False
            Me.MinimizeBox = False
            Me.Name = "Form1"
            Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
            Me.Text = "Text Flow"
            CType(Me.pictureBox1, System.ComponentModel.ISupportInitialize).EndInit()
            Me.ResumeLayout(False)
            Me.PerformLayout()

        End Sub
#End Region

        ''' <summary>
        ''' The main entry point for the application.
        ''' </summary>
        <STAThread()> _
        Shared Sub Main()
            Application.Run(New Form1())
        End Sub
#End Region

#Region "Events"
        Private Sub button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles button1.Click
            'Create a new instance of PdfDocument class.
            Dim document As New PdfDocument()

            'Add a new page to the document.
            Dim page As PdfPage = document.Pages.Add()

            'Read the text from the text file
            Dim reader As New StreamReader(GetFullTemplatePath("Manual.txt", False), Encoding.ASCII)
            Dim text As String = reader.ReadToEnd()
            reader.Close()

            'Set the font
            Dim f As New Font("Arial", 12)
            Dim font As New PdfTrueTypeFont(f, False)

            'Set the format for the text
            Dim format As New PdfStringFormat(PdfTextAlignment.Justify, PdfVerticalAlignment.Top)
            format.ParagraphIndent = 15.0F

            'Create a text element 
            Dim element As New PdfTextElement(text, font)
            element.Brush = New PdfSolidBrush(Color.Black)
            element.StringFormat = format
            element.Font = New PdfStandardFont(PdfFontFamily.Helvetica, 12)

            'Set the properties to paginate the text.
            Dim layoutFormat As New PdfLayoutFormat()
            layoutFormat.Break = PdfLayoutBreakType.FitPage
            layoutFormat.Layout = PdfLayoutType.Paginate

            Dim bounds As New RectangleF(New PointF(10, 10), New SizeF(page.Graphics.ClientSize.Width - 20, page.Graphics.ClientSize.Height - 10))

            ' Stamps the document with text.
            If chbStamp.Checked Then
                ' Set font.
                Dim stampFont As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 60, PdfFontStyle.Bold)
                Dim stamp As New PdfPageTemplateElement(New SizeF(500, 500))
                stamp.Background = True
                stamp.Graphics.SetTransparency(0.25F)
                stamp.Graphics.RotateTransform(-45)
                stamp.Graphics.DrawString("DEMO", stampFont, PdfBrushes.Blue, New PointF(-150, 400), format)
                document.Template.Stamps.Add(stamp)
            Else
                'Raise begin page event to draw the graphic elements for each page.
                AddHandler element.BeginPageLayout, AddressOf BeginPageLayout
            End If

            AddHandler element.EndPageLayout, AddressOf EndPageLayout

            ' Draw the text element.
            element.Draw(page, bounds, layoutFormat)

            'Save and close the document.
            document.Save("Sample.pdf")
            document.Close(True)

            'Message box confirmation to view the created PDF document.
            If MessageBox.Show("Do you want to view the PDF file?", "PDF File Created", MessageBoxButtons.YesNo, MessageBoxIcon.Information) = System.Windows.Forms.DialogResult.Yes Then
                'Launching the PDF file using the default Application.[Acrobat Reader]
                System.Diagnostics.Process.Start("Sample.pdf")
                Me.Close()
            Else
                ' Exit
                Me.Close()
            End If
        End Sub

        ''' <summary>
        ''' Draw graphic elements in the page.
        ''' </summary>
        Private Sub BeginPageLayout(ByVal sender As Object, ByVal e As BeginPageLayoutEventArgs)
            Dim index As Integer = e.Page.Section.Pages.IndexOf(e.Page)
            Dim offset As Single = 50
            Dim brush As PdfSolidBrush = New PdfSolidBrush(Color.LightBlue)

            ' Ellipse for odd numbered pages.
            If index Mod 2 = 0 Then
                Dim bounds As RectangleF = e.Bounds
                e.Page.Graphics.DrawEllipse(brush, bounds.Width / 2 - offset, bounds.Height / 2 - offset, 2 * offset, 2 * offset)
                ' Rectangle for even numbered pages.
            Else
                Dim bounds As RectangleF = e.Bounds
                e.Page.Graphics.DrawRectangle(brush, bounds.Width / 2 - offset, bounds.Height / 2 - offset, 2 * offset, 2 * offset)
            End If
        End Sub

        ''' <summary>
        ''' Draw border for each page in the document.
        ''' </summary>
        Private Sub EndPageLayout(ByVal sender As Object, ByVal e As EndPageLayoutEventArgs)
            Dim args As EndTextPageLayoutEventArgs = CType(e, EndTextPageLayoutEventArgs)
            Dim page As PdfPage = args.Result.Page
            Dim pen As PdfPen = PdfPens.Black
            page.Graphics.DrawRectangle(pen, New RectangleF(Point.Empty, page.Graphics.ClientSize))
        End Sub

#End Region

#Region "Helper Methods"
        ''' <summary>
        ''' Gets the full path of the PDF template or image.
        ''' </summary>
        ''' <param name="fileName">Name of the file</param>
        ''' <param name="image">True if image</param>
        ''' <returns>Path of the file</returns>
        Private Function GetFullTemplatePath(ByVal fileName As String, ByVal image As Boolean) As String
            Dim fullPath As String = "..\..\..\..\..\..\..\..\..\Common\"
            Dim folder As String
            If image Then
                folder = "Images"
            Else
                folder = "Data"
            End If

            Return String.Format("{0}{1}\PDF\{2}", fullPath, folder, fileName)
        End Function
#End Region
    End Class
End Namespace
