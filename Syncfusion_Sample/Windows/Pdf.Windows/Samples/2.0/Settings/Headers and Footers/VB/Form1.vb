#Region "Copyright Syncfusion Inc. 2001 - 2007"
'
'  Copyright Syncfusion Inc. 2001 - 2007. All rights reserved.
'
'  Use of this code is subject to the terms of our license.
'  A copy of the current license can be obtained at any time by e-mailing
'  licensing@syncfusion.com. Re-distribution in any form is strictly
'  prohibited. Any infringement will be prosecuted under applicable laws. 
'
#End Region


Imports Microsoft.VisualBasic
Imports System
Imports System.Drawing
Imports System.Drawing.Imaging
Imports System.Collections
Imports System.ComponentModel
Imports System.Windows.Forms
Imports System.Data
Imports Syncfusion.Pdf
Imports Syncfusion.Pdf.Graphics
Imports System.IO
Imports System.Text


Namespace EssentialPDFSamples
	''' <summary>
	''' Summary description for Form1.
	''' </summary>
	Public Class Form1 : Inherits System.Windows.Forms.Form
        Private m_paginateStart As Boolean = True
        Private Hbounds As RectangleF
        Private m_columnBounds As RectangleF
        Private WithEvents label1 As System.Windows.Forms.Label
        Private WithEvents button1 As System.Windows.Forms.Button
        Private WithEvents PictureBox2 As System.Windows.Forms.PictureBox

        Private components As System.ComponentModel.Container = Nothing

        Public Sub New()
            '
            ' Required for Windows Form Designer support
            '
            InitializeComponent()
            Application.EnableVisualStyles()
            '
            ' TODO: Add any constructor code after InitializeComponent call
            ''
        End Sub

        ''' <summary>
        ''' Clean up any resources being used.
        ''' </summary>
        Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
            If disposing Then
                If Not components Is Nothing Then
                    components.Dispose()
                End If
            End If
            MyBase.Dispose(disposing)
        End Sub

#Region "Windows Form Designer generated code"
        ''' <summary>
        ''' Required method for Designer support - do not modify
        ''' the contents of this method with the code editor.
        ''' </summary>
        Private Sub InitializeComponent()
            Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(Form1))
            Me.label1 = New System.Windows.Forms.Label
            Me.button1 = New System.Windows.Forms.Button
            Me.PictureBox2 = New System.Windows.Forms.PictureBox
            CType(Me.PictureBox2, System.ComponentModel.ISupportInitialize).BeginInit()
            Me.SuspendLayout()
            '
            'label1
            '
            Me.label1.Font = New System.Drawing.Font("Verdana", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
            Me.label1.ForeColor = System.Drawing.Color.FromArgb(CType(CType(0, Byte), Integer), CType(CType(0, Byte), Integer), CType(CType(64, Byte), Integer))
            Me.label1.Location = New System.Drawing.Point(0, 89)
            Me.label1.Name = "label1"
            Me.label1.Size = New System.Drawing.Size(373, 67)
            Me.label1.TabIndex = 27
            Me.label1.Text = "Click the button to view an PDF document generated by Essential PDF. Please note " & _
                "that Adobe Reader or its equivalent is required to view the resultant document."
            '
            'button1
            '
            Me.button1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
            Me.button1.BackColor = System.Drawing.Color.Transparent
            Me.button1.FlatAppearance.BorderColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(192, Byte), Integer), CType(CType(128, Byte), Integer))
            Me.button1.FlatAppearance.MouseDownBackColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(192, Byte), Integer))
            Me.button1.FlatAppearance.MouseOverBackColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(255, Byte), Integer), CType(CType(192, Byte), Integer))
            Me.button1.Image = CType(resources.GetObject("button1.Image"), System.Drawing.Image)
            Me.button1.ImageAlign = System.Drawing.ContentAlignment.MiddleRight
            Me.button1.Location = New System.Drawing.Point(286, 157)
            Me.button1.Name = "button1"
            Me.button1.Size = New System.Drawing.Size(75, 24)
            Me.button1.TabIndex = 26
            Me.button1.Text = "PDF"
            Me.button1.UseVisualStyleBackColor = False
            '
            'PictureBox2
            '
            Me.PictureBox2.Dock = System.Windows.Forms.DockStyle.Top
            Me.PictureBox2.Image = CType(resources.GetObject("PictureBox2.Image"), System.Drawing.Image)
            Me.PictureBox2.Location = New System.Drawing.Point(0, 0)
            Me.PictureBox2.Name = "PictureBox2"
            Me.PictureBox2.Size = New System.Drawing.Size(373, 90)
            Me.PictureBox2.TabIndex = 29
            Me.PictureBox2.TabStop = False
            '
            'Form1
            '
            Me.AutoScaleBaseSize = New System.Drawing.Size(5, 13)
            Me.BackColor = System.Drawing.Color.White
            Me.ClientSize = New System.Drawing.Size(373, 204)
            Me.Controls.Add(Me.PictureBox2)
            Me.Controls.Add(Me.label1)
            Me.Controls.Add(Me.button1)
            Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle
            Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
            Me.MaximizeBox = False
            Me.MinimizeBox = False
            Me.Name = "Form1"
            Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
            Me.Text = "Headers and Footers"
            CType(Me.PictureBox2, System.ComponentModel.ISupportInitialize).EndInit()
            Me.ResumeLayout(False)

        End Sub
#End Region

        ''' <summary>
        ''' The main entry point for the application.
        ''' </summary>
        <STAThread()> _
        Shared Sub Main()
            Application.Run(New Form1())
        End Sub

        Private Sub button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles button1.Click
            'Create a PDF document
            Dim doc As PdfDocument = New PdfDocument()

            'Add a page
            Dim page As PdfPage = doc.Pages.Add()
            Dim rect As RectangleF = New RectangleF(0, 0, page.GetClientSize().Width, 50)

            Dim brush As PdfSolidBrush = New PdfSolidBrush(Color.Black)
            Dim pen As PdfPen = New PdfPen(Color.Black, 1.0F)

            'Creat font
            Dim ttf As Font
            ttf = New Font("Calibri", 14.0F, FontStyle.Bold)
            Dim heading As PdfTrueTypeFont = New PdfTrueTypeFont(ttf, True)

            Dim font As PdfStandardFont = New PdfStandardFont(PdfFontFamily.Helvetica, 11.5F)

            'Adding Header
            Me.AddHeader(doc, "Syncfusion Essential PDF", "Header and Footer Demo")

            'Adding Footer
            Me.AddFooter(doc, "@Copyright 2007")

            'Set formats
            Dim format As PdfStringFormat = New PdfStringFormat()
            format.Alignment = PdfTextAlignment.Justify
            Dim path As String = "..\..\..\..\..\..\..\..\..\Common\Data\PDF\Essential studio.txt"
            Dim reader As StreamReader = New StreamReader(path, Encoding.ASCII)
            Dim text As String = reader.ReadToEnd()
            reader.Close()
            Dim column As RectangleF = New RectangleF(0, 20, page.Graphics.ClientSize.Width / 2.0F - 10.0F, page.Graphics.ClientSize.Height)
            Hbounds = column
            m_columnBounds = column

            'Create text element to control the text flow
            Dim element As PdfTextElement = New PdfTextElement(text, font)
            element.Brush = New PdfSolidBrush(Color.Black)
            element.StringFormat = format
            Dim layoutFormat As PdfLayoutFormat = New PdfLayoutFormat()
            layoutFormat.Break = PdfLayoutBreakType.FitPage
            layoutFormat.Layout = PdfLayoutType.Paginate

            'Get the remaining text that flows beyond the boundary.
            Dim result As PdfTextLayoutResult = element.Draw(page, Hbounds, layoutFormat)

            path = "..\..\..\..\..\..\..\..\..\Common\Data\PDF\Essential PDF.txt"
            reader = New StreamReader(path, Encoding.ASCII)
            text = reader.ReadToEnd()
            reader.Close()

            element = New PdfTextElement(text, font)
            element.Brush = New PdfSolidBrush(Color.Black)
            element.StringFormat = format

            ' Next paragraph flow from last line of the previous paragraph.
            Hbounds.Y = result.LastLineBounds.Y + 35.0F

            'Raise the event when the text flows to next page.
            AddHandler element.BeginPageLayout, AddressOf BeginPageLayout2

            'Raise the event when the text reaches the end of the page.
            AddHandler element.EndPageLayout, AddressOf EndPageLayout2
            result.Page.Graphics.DrawString("Essential PDF", heading, PdfBrushes.DarkBlue, New PointF(Hbounds.X, Hbounds.Y))

            Hbounds.Y = result.LastLineBounds.Y + 60.0F
            result = element.Draw(result.Page, New RectangleF(Hbounds.X, Hbounds.Y, Hbounds.Width, -1), layoutFormat)
            Dim image As PdfImage = New PdfBitmap("..\..\..\..\..\..\..\..\..\Common\Images\PDF\Essen PDF.gif")
            Hbounds.Y = result.LastLineBounds.Y + 20.0F
            Hbounds.X = Hbounds.Width + 20.0F

            result.Page.Graphics.DrawImage(image, New PointF(Hbounds.X, Hbounds.Y))
            result.Page.Graphics.DrawString("Essential DocIO", heading, PdfBrushes.DarkBlue, New PointF(Hbounds.X, Hbounds.Y + image.Height - 20))
            path = "..\..\..\..\..\..\..\..\..\Common\Data\PDF\Essential DocIO.txt"
            reader = New StreamReader(path, Encoding.ASCII)
            text = reader.ReadToEnd()
            reader.Close()

            element = New PdfTextElement(text, font)
            element.Brush = New PdfSolidBrush(Color.Black)
            element.StringFormat = format

            Hbounds.Y = result.LastLineBounds.Y + image.Height + 20
            Hbounds.X = Hbounds.Width + 20.0F


            result = element.Draw(result.Page, New RectangleF(Hbounds.X, Hbounds.Y, Hbounds.Width, -1), layoutFormat)

            image = New PdfBitmap("..\..\..\..\..\..\..\..\..\Common\Images\PDF\Essen DocIO.gif")
            Hbounds.Y = result.LastLineBounds.Y + 20.0F
            Hbounds.X = Hbounds.Width + 20.0F

            result.Page.Graphics.DrawImage(image, New PointF(Hbounds.X, Hbounds.Y))

            path = "..\..\..\..\..\..\..\..\..\Common\Data\PDF\Essential XlsIO.txt"
            reader = New StreamReader(path, Encoding.ASCII)
            text = reader.ReadToEnd()
            reader.Close()

            element = New PdfTextElement(text, font)
            element.Brush = New PdfSolidBrush(Color.Black)
            element.StringFormat = format

            result.Page.Graphics.DrawString("Essential XlsIO", heading, PdfBrushes.DarkBlue, New PointF(Hbounds.X, Hbounds.Y + image.Height - 20))

            Hbounds.Y = result.LastLineBounds.Y + image.Height + 20
            Hbounds.X = Hbounds.Width + 20.0F
            result = element.Draw(result.Page, New RectangleF(Hbounds.X, Hbounds.Y, Hbounds.Width, -1), layoutFormat)

            image = New PdfBitmap("..\..\..\..\..\..\..\..\..\Common\Images\PDF\Essen XlsIO.gif")
            Hbounds.Y = result.LastLineBounds.Y + 20.0F
            Hbounds.X = Hbounds.Width + 20.0F

            result.Page.Graphics.DrawImage(image, New PointF(Hbounds.X, Hbounds.Y))
            doc.Save("Sample.pdf")

            'Message box confirmation to view the created PDF document.
            If MessageBox.Show("Do you want to view the PDF file?", "PDF File Created", MessageBoxButtons.YesNo, MessageBoxIcon.Information) = Windows.Forms.DialogResult.Yes Then
                'Launching the PDF file using the default Application.[Acrobat Reader]
                System.Diagnostics.Process.Start("Sample.pdf")
                Me.Close()
            Else
                ' Exit
                Me.Close()
            End If
        End Sub

		Private Sub EndPageLayout2(ByVal sender As Object, ByVal e As EndPageLayoutEventArgs)
			Dim args As EndTextPageLayoutEventArgs = CType(e, EndTextPageLayoutEventArgs)
			Dim tlr As PdfTextLayoutResult = args.Result
			Dim bounds As RectangleF = tlr.Bounds
			args.NextPage = tlr.Page
		End Sub
		Private Sub BeginPageLayout2(ByVal sender As Object, ByVal e As BeginPageLayoutEventArgs)

			Dim bounds As RectangleF = e.Bounds

		   ' First column.
			If (Not m_paginateStart) Then
				bounds.X = bounds.Width + 20f
				bounds.Y = 10f
			Else
				' Second column.
				bounds.X = 0f
				m_paginateStart = False
			End If

			e.Bounds = bounds
			m_columnBounds = bounds
		End Sub

		Private Sub AddHeader(ByVal doc As PdfDocument, ByVal title As String, ByVal description As String)
			Dim rect As RectangleF = New RectangleF(0, 0, doc.Pages(0).GetClientSize().Width, 50)

			'Create page template
			Dim header As PdfPageTemplateElement = New PdfPageTemplateElement(rect)
			Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 24)
			Dim doubleHeight As Single = font.Height * 2
			Dim activeColor As Color = Color.FromArgb(44, 71, 120)
			Dim imageSize As SizeF = New SizeF(110f, 35f)
			'Locating the logo on the right corner of the Drawing Surface
			Dim imageLocation As PointF = New PointF(doc.Pages(0).GetClientSize().Width - imageSize.Width - 20, 5)

            Dim img As PdfImage = New PdfBitmap("..\..\..\..\..\..\..\..\..\Common\Images\PDF\logo.png")

			'Draw the image in the Header.
			header.Graphics.DrawImage(img, imageLocation, imageSize)

			Dim brush As PdfSolidBrush = New PdfSolidBrush(activeColor)

			Dim pen As PdfPen = New PdfPen(Color.DarkBlue, 3f)
			font = New PdfStandardFont(PdfFontFamily.Helvetica, 16, PdfFontStyle.Bold)

			'Set formattings for the text
			Dim format As PdfStringFormat = New PdfStringFormat()
			format.Alignment = PdfTextAlignment.Center
			format.LineAlignment = PdfVerticalAlignment.Middle

			'Draw title
			header.Graphics.DrawString(title, font, brush, New RectangleF(0, 0, header.Width, header.Height), format)
			brush = New PdfSolidBrush(Color.Gray)
			font = New PdfStandardFont(PdfFontFamily.Helvetica, 6, PdfFontStyle.Bold)

			format = New PdfStringFormat()
			format.Alignment = PdfTextAlignment.Left
			format.LineAlignment = PdfVerticalAlignment.Bottom

			'Draw description
			header.Graphics.DrawString(description, font, brush, New RectangleF(0, 0, header.Width, header.Height - 8), format)

			'Draw some lines in the header
			pen = New PdfPen(Color.DarkBlue, 0.7f)
			header.Graphics.DrawLine(pen, 0, 0, header.Width, 0)
			pen = New PdfPen(Color.DarkBlue, 2f)
			header.Graphics.DrawLine(pen, 0, 03, header.Width+3, 03)
			pen = New PdfPen(Color.DarkBlue, 2f)
			header.Graphics.DrawLine(pen, 0, header.Height - 3, header.Width, header.Height - 3)
			header.Graphics.DrawLine(pen, 0, header.Height, header.Width, header.Height)

			'Add header template at the top.
			doc.Template.Top = header

		End Sub

		Private Sub AddFooter(ByVal doc As PdfDocument, ByVal footerText As String)
			Dim rect As RectangleF = New RectangleF(0, 0, doc.Pages(0).GetClientSize().Width, 50)

			'Create a page template
			Dim footer As PdfPageTemplateElement = New PdfPageTemplateElement(rect)
			Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 8)

			Dim brush As PdfSolidBrush = New PdfSolidBrush(Color.Gray)

			Dim pen As PdfPen = New PdfPen(Color.DarkBlue, 3f)
			font = New PdfStandardFont(PdfFontFamily.Helvetica, 6, PdfFontStyle.Bold)
			Dim format As PdfStringFormat = New PdfStringFormat()
			format.Alignment = PdfTextAlignment.Center
			format.LineAlignment = PdfVerticalAlignment.Middle
			footer.Graphics.DrawString(footerText, font, brush, New RectangleF(0, 18, footer.Width, footer.Height), format)

			format = New PdfStringFormat()
			format.Alignment = PdfTextAlignment.Right
			format.LineAlignment = PdfVerticalAlignment.Bottom

			'Create page number field
			Dim pageNumber As PdfPageNumberField = New PdfPageNumberField(font, brush)

			'Create page count field
			Dim count As PdfPageCountField = New PdfPageCountField(font, brush)

            Dim compositeField As PdfCompositeField = New PdfCompositeField(font, brush, "Page {0} of {1}", pageNumber, count)
            compositeField.Bounds = footer.Bounds
            compositeField.Draw(footer.Graphics, New PointF(470, 40))


			'Add the footer template at the bottom
			doc.Template.Bottom = footer

		End Sub

	End Class
End Namespace
