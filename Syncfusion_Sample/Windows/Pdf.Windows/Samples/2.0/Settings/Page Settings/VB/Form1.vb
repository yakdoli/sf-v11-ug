#Region "Copyright Syncfusion Inc. 2001 - 2007"
'
'  Copyright Syncfusion Inc. 2001 - 2007. All rights reserved.
'
'  Use of this code is subject to the terms of our license.
'  A copy of the current license can be obtained at any time by e-mailing
'  licensing@syncfusion.com. Re-distribution in any form is strictly
'  prohibited. Any infringement will be prosecuted under applicable laws. 
'
#End Region


Imports Microsoft.VisualBasic
Imports System
Imports System.Drawing
Imports System.Drawing.Imaging
Imports System.Collections
Imports System.ComponentModel
Imports System.Windows.Forms
Imports System.Data
Imports Syncfusion.Pdf
Imports Syncfusion.Pdf.Graphics

Namespace EssentialPDFSamples
	''' <summary>
	''' Summary description for Form1.
	''' </summary>
	Public Class Form1 : Inherits System.Windows.Forms.Form
		Private WithEvents button1 As System.Windows.Forms.Button
		Private label1 As System.Windows.Forms.Label
        Private section As PdfSection
        Private page As PdfPage
        Private WithEvents PictureBox2 As System.Windows.Forms.PictureBox
        ''' <summary>
        ''' Required designer variable.
        ''' </summary>
        Private components As System.ComponentModel.Container = Nothing

        Public Sub New()
            '
            ' Required for Windows Form Designer support
            '
            InitializeComponent()
            '
            ' TODO: Add any constructor code after InitializeComponent call
            ''
        End Sub

        ''' <summary>
        ''' Clean up any resources being used.
        ''' </summary>
        Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
            If disposing Then
                If Not components Is Nothing Then
                    components.Dispose()
                End If
            End If
            MyBase.Dispose(disposing)
        End Sub

#Region "Windows Form Designer generated code"
        ''' <summary>
        ''' Required method for Designer support - do not modify
        ''' the contents of this method with the code editor.
        ''' </summary>
        Private Sub InitializeComponent()
            Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(Form1))
            Me.button1 = New System.Windows.Forms.Button
            Me.label1 = New System.Windows.Forms.Label
            Me.PictureBox2 = New System.Windows.Forms.PictureBox
            CType(Me.PictureBox2, System.ComponentModel.ISupportInitialize).BeginInit()
            Me.SuspendLayout()
            '
            'button1
            '
            Me.button1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
            Me.button1.BackColor = System.Drawing.Color.Transparent
            Me.button1.FlatAppearance.BorderColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(192, Byte), Integer), CType(CType(128, Byte), Integer))
            Me.button1.FlatAppearance.MouseDownBackColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(224, Byte), Integer), CType(CType(192, Byte), Integer))
            Me.button1.FlatAppearance.MouseOverBackColor = System.Drawing.Color.FromArgb(CType(CType(255, Byte), Integer), CType(CType(255, Byte), Integer), CType(CType(192, Byte), Integer))
            Me.button1.Image = CType(resources.GetObject("button1.Image"), System.Drawing.Image)
            Me.button1.ImageAlign = System.Drawing.ContentAlignment.MiddleRight
            Me.button1.Location = New System.Drawing.Point(289, 162)
            Me.button1.Name = "button1"
            Me.button1.Size = New System.Drawing.Size(75, 23)
            Me.button1.TabIndex = 0
            Me.button1.Text = "PDF"
            Me.button1.UseVisualStyleBackColor = False
            '
            'label1
            '
            Me.label1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                        Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
            Me.label1.Font = New System.Drawing.Font("Verdana", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
            Me.label1.ForeColor = System.Drawing.Color.FromArgb(CType(CType(0, Byte), Integer), CType(CType(0, Byte), Integer), CType(CType(64, Byte), Integer))
            Me.label1.Location = New System.Drawing.Point(0, 95)
            Me.label1.Name = "label1"
            Me.label1.Size = New System.Drawing.Size(378, 67)
            Me.label1.TabIndex = 1
            Me.label1.Text = "Click the button to view an PDF document generated by Essential PDF. Please note " & _
                "that Adobe Reader or its equivalent is required to view the resultant document."
            '
            'PictureBox2
            '
            Me.PictureBox2.Dock = System.Windows.Forms.DockStyle.Top
            Me.PictureBox2.Image = CType(resources.GetObject("PictureBox2.Image"), System.Drawing.Image)
            Me.PictureBox2.Location = New System.Drawing.Point(0, 0)
            Me.PictureBox2.Name = "PictureBox2"
            Me.PictureBox2.Size = New System.Drawing.Size(376, 91)
            Me.PictureBox2.TabIndex = 25
            Me.PictureBox2.TabStop = False
            '
            'Form1
            '
            Me.AutoScaleBaseSize = New System.Drawing.Size(5, 13)
            Me.BackColor = System.Drawing.Color.White
            Me.ClientSize = New System.Drawing.Size(376, 206)
            Me.Controls.Add(Me.PictureBox2)
            Me.Controls.Add(Me.button1)
            Me.Controls.Add(Me.label1)
            Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle
            Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
            Me.MaximizeBox = False
            Me.MinimizeBox = False
            Me.Name = "Form1"
            Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
            Me.Text = "Page Settings"
            CType(Me.PictureBox2, System.ComponentModel.ISupportInitialize).EndInit()
            Me.ResumeLayout(False)

        End Sub
#End Region

        ''' <summary>
        ''' The main entry point for the application.
        ''' </summary>
        <STAThread()> _
        Shared Sub Main()
            Application.EnableVisualStyles()
            Application.Run(New Form1())
        End Sub

        Private Sub button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles button1.Click
            ' Create a new document class object.
            Dim doc As PdfDocument = New PdfDocument()

            ' Create few sections with one page in each.
            For i As Integer = 0 To 3
                section = doc.Sections.Add()

                'Create page label
                Dim label As PdfPageLabel = New PdfPageLabel()

                label.Prefix = "Sec" & i & "-"
                section.PageLabel = label
                page = section.Pages.Add()
                section.Pages(0).Graphics.SetTransparency(0.35F)
                section.PageSettings.Transition.PageDuration = 1
                section.PageSettings.Transition.Duration = 1
                section.PageSettings.Transition.Style = PdfTransitionStyle.Box
            Next i

            'Set page size
            doc.PageSettings.Size = PdfPageSize.A6

            'Set viewer prefernce.
            doc.ViewerPreferences.HideToolbar = True
            doc.ViewerPreferences.PageMode = PdfPageMode.FullScreen

            'Set page orientation
            doc.PageSettings.Orientation = PdfPageOrientation.Landscape

            'Create a brush
            Dim brush As PdfSolidBrush = New PdfSolidBrush(Color.Black)
            brush.Color = New PdfColor(System.Drawing.Color.LightGreen)

            'Create a Rectangle
            Dim rect As PdfRectangle = New PdfRectangle(0, 0, 1000.0F, 1000.0F)
            rect.Brush = brush
            Dim pen As PdfPen = New PdfPen(System.Drawing.Color.Black)
            pen.Width = 6.0F

            'Get the first page in first section
            page = doc.Sections(0).Pages(0)

            'Draw the rectangle
            rect.Draw(page.Graphics)

            'Draw a line
            page.Graphics.DrawLine(pen, 0, 100, 300, 100)

            ' Add margins.
            doc.PageSettings.SetMargins(0.0F)

            'Get the first page in second section
            page = doc.Sections(1).Pages(0)
            doc.Sections(1).PageSettings.Rotate = PdfPageRotateAngle.RotateAngle90
            rect.Draw(page.Graphics)

            page.Graphics.DrawLine(pen, 0, 100, 300, 100)

            ' Change the angle f the section. This should rotate the previous page.
            doc.Sections(2).PageSettings.Rotate = PdfPageRotateAngle.RotateAngle180
            page = doc.Sections(2).Pages(0)
            rect.Draw(page.Graphics)
            page.Graphics.DrawLine(pen, 0, 100, 300, 100)

            section = doc.Sections(3)
            section.PageSettings.Orientation = PdfPageOrientation.Portrait
            page = section.Pages(0)
            rect.Draw(page.Graphics)
            page.Graphics.DrawLine(pen, 0, 100, 300, 100)

            'Set the font
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 16.0F)
            Dim fieldBrush As PdfSolidBrush = New PdfSolidBrush(Color.Black)

            'Create page number field
            Dim pageNumber As PdfPageNumberField = New PdfPageNumberField(font, fieldBrush)

            'Create page count field
            Dim count As PdfPageCountField = New PdfPageCountField(font, fieldBrush)

            'Draw page template
            Dim templateElement As PdfPageTemplateElement = New PdfPageTemplateElement(400, 400)
            templateElement.Graphics.DrawString("Page :" & Constants.vbTab & "of", font, PdfBrushes.Black, New PointF(260, 200))

            'Draw current page number
            pageNumber.Draw(templateElement.Graphics, New PointF(306, 200))

            'Draw number of pages
            count.Draw(templateElement.Graphics, New PointF(345, 200))
            doc.Template.Stamps.Add(templateElement)
            templateElement.Background = True


            'Save the PDF
            doc.Save("Sample.pdf")

            'Message box confirmation to view the created PDF document.
            If MessageBox.Show("Do you want to view the PDF file?", "PDF File Created", MessageBoxButtons.YesNo, MessageBoxIcon.Information) = DialogResult.Yes Then
                'Launching the PDF file using the default Application.[Acrobat Reader]
                System.Diagnostics.Process.Start("Sample.pdf")
                Me.Close()
            Else
                ' Exit
                Me.Close()
            End If
        End Sub

	End Class
End Namespace
