<html>
<h1>Find-Replace Demo</h1>

<p>This sample comes with added support for performing search-and-replace operations with 
the GridDataBoundGrid control. It allows you to do the following search actions with data records in the grid: 
<i>find</i>, <i>find</i> <i>all</i>, <i>replace</i>, and <i>replace</i> <i>all</i>. It also explores various search options such as whether to ignore case 
or perform search only in a current column or whole table.</p>

<p>The grid-find-replace-dialog<b> </b>sink provides the implementation for find-and-replace operations with 
Grid. It provides the following methods to support search actions:</p>

<ul>
<li><b>Find</b> - Finds text with the specified criteria</li>
<li><b>Replace</b> - Replaces text with the specified criteria</li>
<li><b>Replace All</b> - Replaces the text in all the cells with the specified 
criteria</li>
</ul>

<p>The search criteria, such as the search string, replace string, and search conditions, 
can be specified through an instance of the <b>GridFindReplaceEventArgs</b> 
class. The <b>GridFindTextOptions</b> defines the possible search options for grid data. </p>
<p>The available options are explained below.</p>

<p><b>Grid Find Text Options</b>
<ul>
<li><b>Match Case</b> - Indicates whether the search is case sensitive</li>
<li><b>Match Whole Cell</b> - The search succeeds only if the search string 
matches the whole cell</li>
<li><b>Search Up</b> - Indicates whether to perform a bottom-up search</li>
<li><b>Whole Table</b> - Searches the whole table</li>
<li><b>Column Only</b> - Searches only in the current column.</li>
</ul></p>

<p>When you run the sample, enter your search string and click <strong>FindAll</strong>, to find all the occurrences of the given string. The sample will highlight all the data records that contain the search string. </p>
<p>Here is an image showing the sample output.</p>

<p><div align=center><img src="images/sample.png" alt="FindReplaceSample" title="" /></div>
</p>

<p>Below are sample code snippets that implement these operations. The <strong>QueryCellStyleInfo</strong> 
event is handled to implement the <strong>FindAll </strong>operation; it highlights all the data records containing the search string.</p>

<p><b>Find</b></p>
<p><font color="#8D2E1C"><pre>
	GridFindReplaceEventArgs frEvents = new GridFindReplaceEventArgs(txtSearch.Text, "", searchOptions, locInfo);
	GridFindReplaceDialogSink frDialog = new GridFindReplaceDialogSink(this.gridDataBoundGrid1);
	frDialog.Find(frEvents);
</pre></font></p>

<p><b>Replace</b></p>
<p><font color="#8D2E1C"><pre>
	GridFindReplaceEventArgs frEvents = new GridFindReplaceEventArgs(txtSearch.Text, txtReplace.Text, searchOptions, locInfo);
	GridFindReplaceDialogSink frDialog = new GridFindReplaceDialogSink(gridGroupingControl1.TableControl);
	frDialog.Replace(frEvents);
</pre></font></p>

<p><b>Replace All</b></p>
<p><font color="#8D2E1C"><pre>
	GridFindReplaceEventArgs frEvents = new GridFindReplaceEventArgs(txtSearch.Text, txtReplace.Text, searchOptions, locInfo);
	GridFindReplaceDialogSink frDialog = new GridFindReplaceDialogSink(gridGroupingControl1.TableControl);
	frDialog.ReplaceAll(frEvents);
</pre></font></p>

<p><b>Find All by Query Cell Style Info</b></p>
<p><font color="#8D2E1C"><pre>
	bool findAll = false;
	bool resetAll = false;
	void Model_QueryCellInfo(object sender, GridQueryCellInfoEventArgs e)
	{
		if (findAll)
		{
			GridCurrentCell gcc = this.gridDataBoundGrid1.CurrentCell;
			if (this.cmbBoxOptions.Text.Equals("WholeTable"))
			{
				SetCellBackColor(e);
			}
			else if (cmbBoxOptions.Text.Equals("ColumnOnly") && gcc!= null)
			{
				if (e.ColIndex == gcc.ColIndex)
				{
					SetCellBackColor(e);
				}
			}
		}
		else if (resetAll)
			e.Style.BackColor = SystemColors.Window;
	}
</pre></font></p>
</html>