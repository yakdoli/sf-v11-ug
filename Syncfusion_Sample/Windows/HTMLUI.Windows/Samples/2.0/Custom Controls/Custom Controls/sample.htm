<html>

<head>
</head>

<h1>Custom Controls</h1>

<p>This sample shows how to create an <strong>interface</strong> with Windows Forms 
controls for the custom controls in HTMLUI.</p>

<p><p align=center>
<img src="images/sample.png" alt="HTMLUI Custom Controls " width="579" height="420"  /></p>

<p><strong>Features</strong>:</p>

<ul>
	<li>The custom controls can also be defined with the help of user-defined tags and can be interfaced with the controls that are available on the form with the help of the the
	<strong>prerenderdocument </strong>event.</ul>

<ul><li>The <strong>prerenderdocument</strong> event occurs at the time when the HTML document 
	(with its elements not positioned) is being loaded into the HTMLUI control.</ul>

<ul><li>The HTML elements are loaded into a hash table with an equivalent ID as 
	their key. An equivalent <strong>base</strong> class object, here <strong>BaseElement</strong> class, is defined in order to link the HTML elements that are stored in the hash table with the help of the key that is associated with the element.</ul>

<ul><li>The <strong>CustomControlBase</strong> is used to implement the base functionality of the Windows 
	Forms control on the HTML tag element. </ul>

<ul><li>This sample depends on the following Syncfusion assemblies along with the Syncfusion HTMLUI assemblies for its execution.</ul>

<blockquote>
  <blockquote>
    <ul>
    <li>Syncfusion.Grid.Base</li>
    <li>Syncfusion.Grid.Windows</li>
    <li>Syncfusion.Tools.Base</li>
    <li>Syncfusion.Tools.Windows</li>
    </ul>
  </blockquote>
</blockquote>


<p>Here is the code to interface the custom controls in the HTMLUI control.</p>


<blockquote><font color="#8D2E1C">
  <pre> 
//User-defined method is called by passing class name and assembly name as arguments.

CreateControl("Syncfusion.Windows.Forms.ButtonAdv", "Syncfusion.Shared.Base");
CreateControl("Syncfusion.Windows.Forms.Tools.CurrencyTextBox", "Syncfusion.Shared.Base");
CreateControl("DateTimePicker", "System.Windows.Forms");
CreateControl("Syncfusion.Windows.Forms.Tools.CurrencyTextBox", "Syncfusion.Shared.Base");

//Replace the custom string with the class name and the assembly name.
<font color="#8D2E1C">
private void CreateControl(string className, string assemblyName)
{
	string customHTML = this.customControlTemplateString.Replace("$$classname$$", className);
	customHTML = customHTML.Replace("$$assembly$$", assemblyName);
	this.controlsString += customHTML;
}


//Frame the HTML content and load into the HTMLUI control.
<font color="#8D2E1C">
private void SyncHTML()
{
	string htmlStr = "&lt;html&gt;&lt;body&gt;" + this.controlsString + "&lt;/body&gt;&lt;/html&gt;";
	this.htmluiControl1.LoadFromString(htmlStr);
	this.richTextBox1.Text = htmlStr.Replace("&lt;p/>", "&lt;p/>\r\n");
} </pre>
</blockquote>
</font></p>
</html>