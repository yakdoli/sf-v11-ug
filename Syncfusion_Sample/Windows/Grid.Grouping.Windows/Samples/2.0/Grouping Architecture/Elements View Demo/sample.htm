<html><h1>Elements View Demo</h1>

<p><p>This sample allows you to display an event log that will show the order of various events related to the 
grouping engine. You will be able to trace various grouping engine events like Group 
Added, Group Collapsed, Group Expanded, Record Collapsed, Record Expanded, Record 
Value Changed, Binding Context Changed, etc.
<p></p>

<p>The sample contains a class called <strong>Tracer</strong> that is used to hook up the events that are in demand and to unhook 
events as well. This class contains <strong>HookEngEvents</strong> and <strong>HookEngTableEvents</strong>, which provide the event handlers for the 
grouping engine events and the <strong>GroupingEngine.Table</strong> events. The
<strong>UnHookEvents</strong> method is called when you want to disable tracing.
<p>The event log is displayed in the output window that is 
shown is a list box control. The <strong>AppendOutput</strong> method of the<strong> Tracer</strong> is used to send the results to the 
list box control for display.
<p></p>

<p>Given below is an image of the sample.</p>

<p><p align=center><img src="images/sample.png" alt="GroupingEngineEvents screenshot" title="GroupingEngineEvents" /></p>

<p><p> Here is the code to hook up an event:</p>

<p><font color="#8D2E1C"><pre>
    		this.groupingEngine.GroupCollapsed+=new GroupEventHandler(groupingEngine_GroupCollapsed);  </pre></font></p>

<p><p>Here is the code to unhook the event:</p>

<p><font color="#8D2E1C"><pre>
    		this.groupingEngine.GroupCollapsed-=new GroupEventHandler(groupingEngine_GroupCollapsed);  </pre></font>
<p>Here is the code to add an event handler:</p>

<p><font color="#8D2E1C"><pre>
    		private void groupingEngine_GroupCollapsed(object sender, GroupEventArgs e)
    		{
    			AppendOutput("GroupCollapsed",e);
    		}  </pre></font></p>
</html>