
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=windows-1252">
	<TITLE></TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.3  (Win32)">
	<META NAME="CREATED" CONTENT="0;0">
	<META NAME="CHANGED" CONTENT="20090103;2403875">
	<STYLE TYPE="text/css">
	<!--
		@page { size: 8.5in 11in }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-US" DIR="LTR">
<H1>Getting Started : Filtering Tutorial</H1>
<P>This sample demonstrates the creation of filters at design time. 
</P>
<P><FONT SIZE=4><B>Interactive Features:</B></FONT></P>
<UL>
	<LI><P>In the Properties window, select <STRONG>TableDescriptor -&gt;
	RecordFilters</STRONG> to set the filter criteria. This will
	open the RecordFilterDescriptor Collection Editor, as shown in the
	following image.</P>
</UL>
<P ALIGN=CENTER><img src="images/sample1.png" NAME="graphics1" ALT="Filtering Tutorial screenshot" ALIGN=BOTTOM  BORDER=0>
</P>
<UL>
	<LI><P>Click <STRONG>Add</STRONG> to add a row filter. In the <STRONG>Name</STRONG>
	property, select <STRONG>Wins</STRONG>. You can enter the filter
	expression using the <STRONG>Expression</STRONG> property:<STRONG>
	[Wins] &gt; 20</STRONG>. 
	</P>
</UL>
<P ALIGN=CENTER><img src="images/sample2.png" NAME="graphics2" ALT="Filtering Tutorial screenshot" ALIGN=BOTTOM  BORDER=0>
</P>
<UL>
	<LI><P>If you want to enter a filter expression using editors,
	select <STRONG>Conditions</STRONG> to open the <STRONG>FilterCondition
	</STRONG>Collection Editor. Click <STRONG>Add</STRONG>, to add a
	filter condition. Select <STRONG>FilterCompareOperator</STRONG> and
	specify the compare text. <BR><BR>The display will look like the
	image given below.</P>
</UL>
<P ALIGN=CENTER><img src="images/sample3.png" NAME="graphics3" ALT="Filtering Tutorial screenshot" ALIGN=BOTTOM  BORDER=0>
</P>
<UL>
	<LI><P>Close the two collection editor windows and run the sample. Now your 
	Grid Grouping control will only display records with wins greater than 
	twenty. <BR></P>
</UL>
<P>The following is an image of the sample.</P>
<P ALIGN=CENTER><img src="images/sample4.png" NAME="graphics4" ALT="Filtering Tutorial screenshot" ALIGN=BOTTOM  BORDER=0>
</P>
<P ALIGN=CENTER><BR><BR>
</P>
<P><B>List of Valid Filter Expressions</B></P>
<UL>
	<UL>
		<UL>
			<LI><P>Expressions may be any well-formed algebraic combination of
			column mapping names enclosed with brackets &quot;[ ]&quot;,
			numerical constants, and literals.</P>
			<LI><P>Computations are performed as listed, with Level One
			operations first. Alpha constants used with <EM>match</EM> and<EM>
			like</EM> should be enclosed in apostrophes ( ' ).</P>
			<LI><P>Algebraic and logical operators are listed below.</P>
		</UL>
	</UL>
</UL>
<P><BR><BR>
</P>
<TABLE BORDER=2 CELLPADDING=2 CELLSPACING=2>
	<TR BGCOLOR="#cccccc">
		<TH>
			<P ALIGN=CENTER>Expression</P>
		</TH>
		<TH>
			<P ALIGN=CENTER>Syntax</P>
		</TH>
		<TH>
			<P ALIGN=CENTER>Description</P>
		</TH>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Multiplication, Division</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>*, /</P>
		</TD>
		<TD>
			<P>Multiplies or Divides first argument by second argument.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Addition, Subtraction</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>+, -</P>
		</TD>
		<TD>
			<P>Adds first argument with second argument or Subtracts second
			argument from the first one.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Or</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>| |</P>
		</TD>
		<TD>
			<P>Returns 1 if either the first argument or the second argument
			returns <EM>true</EM>.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>And</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>&amp;&amp;</P>
		</TD>
		<TD>
			<P>Returns 1 if both parameters return true.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Less Than</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>&lt;</P>
		</TD>
		<TD>
			<P>Returns<EM> true</EM> if first parameter is less than the
			second one.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Greater Than</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>&gt;</P>
		</TD>
		<TD>
			<P>Returns <EM>true</EM> if first parameter is greater than the
			second one.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Less Than Or Equal</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>&lt;=</P>
		</TD>
		<TD>
			<P>Returns<EM> true </EM>if first parameter is less than or equal
			to the second one.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Greater Than Or Equal</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>&gt;=</P>
		</TD>
		<TD>
			<P>Returns <EM>true</EM> if first parameter is greater than or
			equal to the second one.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Equal</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>=</P>
		</TD>
		<TD>
			<P>Returns <EM>true </EM>if both arguments have the same value.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Match</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>match</P>
		</TD>
		<TD>
			<P>Returns 1 if there is any occurrence of the right-hand argument
			in the left-hand argument. For example, [CompanyName] match 'RTR'
			returns 0 for any record whose CompanyName field does not contain
			RTR anywhere in the string.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Like</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>like</P>
		</TD>
		<TD>
			<P>Checks if the field starts exactly as specified in the the
			right-hand argument. For example, [CompanyName] like 'RTR' returns
			1 for any record whose CompanyName field is exactly RTR. You can
			use an asterisk as a wildcard. [CompanyName] like 'RTR*' returns 1
			for any record whose CompanyName field starts with RTR.
			[CompanyName] like '*RTR' returns 1 for any record whose
			CompanyName field ends with RTR. 
			</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>In</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>in</P>
		</TD>
		<TD>
			<P>Checks if the field value is any of the values listed in the
			right-hand operand. The collection of items used as the right-hand
			should be separated by commas and enclosed with brackets({}). For
			example, [code] in {1,10,21} returns 1 for any record whose code
			field contains 1, 10 or 21. [CompanyName] in {RTR,MAS} returns 1
			for any record whose CompanyName field is RTR or MAS.</P>
		</TD>
	</TR>
	<TR BGCOLOR="#e3efff">
		<TD>
			<P ALIGN=CENTER>Between</P>
		</TD>
		<TD>
			<P ALIGN=CENTER>between</P>
		</TD>
		<TD>
			<P>Checks if a date-field value between the two values is listed
			in the right-hand operand. For example, [date] between {2/25/2004,
			3/2/2004} returns 1 for any record whose date field is greater or
			equal to 2/25/2004 and less than 3/2/2004. To represent the
			current date, use the token TODAY. To represent DateTime.MinValue,
			leave the first argument empty. To represent DateTime.MaxValue,
			leave the second argument empty.</P>
		</TD>
	</TR>
</TABLE>
<P><BR><BR>
</P>
</BODY>
</HTML>