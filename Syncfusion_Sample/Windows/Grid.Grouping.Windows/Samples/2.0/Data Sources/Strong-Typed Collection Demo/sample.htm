
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=windows-1252">
	<TITLE></TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.3  (Win32)">
	<META NAME="CREATED" CONTENT="0;0">
	<META NAME="CHANGED" CONTENT="20090103;3062604">
	<STYLE TYPE="text/css">
	<!--
		@page { size: 8.5in 11in }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-US" DIR="LTR">
<H1>Strong-Typed Collection Demo</H1>
<P>This sample demonstrates the implementation of a custom
collection. 
</P>
<P><FONT COLOR="#000000"><FONT FACE="Times New Roman, serif"><FONT SIZE=4><B>Features:</B></FONT></FONT></FONT></P>
<UL>
	<LI><P>The custom collection is implemented in the class <STRONG>Customer.</STRONG></P>
	<LI><P>It consists of the following four classes:</P>
	<UL>
		<LI><P><B>PopulateCustomer</B></P>
		<LI><P><B>Customer </B>
		</P>
		<LI><P><B>CustomerCollection</B></P>
		<LI><P><B>CustomerCollectionEnumerator </B>
		</P>
	</UL>
	<LI><P>The<STRONG> PopulateCustomer</STRONG> class calls the
	<STRONG>CreateCustomer()</STRONG> method which in turn calls the
	<STRONG>ReadCustomer() </STRONG>method<STRONG> </STRONG>to populate
	values.</P>
	<LI><P>An object for the <STRONG>CustomerCollection</STRONG> class
	is created and the objects of the <STRONG>Customer</STRONG> class
	are added.</P>
	<LI><P>New customer objects are added as children to the <STRONG>cust1
	</STRONG>object.</P>
	<LI><P><STRONG>Customer</STRONG> class implements from the
	<STRONG>IEditableObject</STRONG> interface.</P>
	<LI><P>It has the <STRONG>PropertyChanged</STRONG> event, which is
	associated with the <STRONG>RaisePropertyChanged() </STRONG>method.</P>
	<LI><P><STRONG>CustomerCollection</STRONG> class implements from the<STRONG>
	IList </STRONG>and the <STRONG>IBindingList </STRONG>interfaces.</P>
	<LI><P><STRONG>CustomerCollectionEnumerator</STRONG> class
	implements from the <STRONG>IEnumerator </STRONG>interface.</P>
</UL>
<P>An object for the <STRONG>CustomerCollection</STRONG> class is
created and the objects of the <STRONG>Customer</STRONG> class are
added using the following code:</P>
<P><BR><BR>
</P>
<PRE><FONT COLOR="#8d2e1c">                CustomerCollection customers = new CustomerCollection();</FONT>
<FONT COLOR="#8d2e1c">                Customer cust1 = ReadCustomer1();</FONT>
<FONT COLOR="#8d2e1c">                customers.Add(cust1);  </FONT></PRE><P>
New customer objects are added as children to the <STRONG>cust1
</STRONG>object using the following code:</P>
<PRE><FONT COLOR="#8d2e1c">                cust1.Children.Add(ReadCustomer3());</FONT>
<FONT COLOR="#8d2e1c">                cust1.Children.Add(ReadCustomer4());  </FONT></PRE><P>
The <STRONG>Customer</STRONG> class implements from the
<STRONG>IEditableObject</STRONG> interface. 
</P>
<P>It has the following fields:</P>
<PRE><FONT COLOR="#8d2e1c">                private CustomerCollection _parentCollection;</FONT>
<FONT COLOR="#8d2e1c">                private CustomerCollection _children = new CustomerCollection();</FONT>
<FONT COLOR="#8d2e1c">                private CustomerData custData; </FONT>
<FONT COLOR="#8d2e1c">                private CustomerData backupData; </FONT>
<FONT COLOR="#8d2e1c">                private bool beginEditCalled = false;</FONT>
<FONT COLOR="#8d2e1c">                private bool modified = false;</FONT>
<FONT COLOR="#8d2e1c">                private IEditableObject _forwardEditableObject;  </FONT></PRE>
<UL>
	<LI><P>It has the <STRONG>PropertyChanged</STRONG> event, which is
	associated with the <STRONG>RaisePropertyChanged() </STRONG>method.</P>
</UL>
<P ALIGN=CENTER><img src="images/sample.png" NAME="graphics1" ALT="IList screenshot" ALIGN=BOTTOM  BORDER=0></P>
</BODY>
</HTML>