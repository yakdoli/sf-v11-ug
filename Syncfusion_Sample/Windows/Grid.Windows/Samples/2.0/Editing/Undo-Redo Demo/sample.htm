<html><h1>Undo-Redo Demo</h1>

<p><p>This sample illustrates the flexible undo-redo support in Essential Grid. A stack is maintained internally in Essential Grid to achieve this functionality. 
When you make changes to the grid, they get piled up in stack for further processing.
</p></p>

<p>This architecture is extensible. enabling users to derive from either of the two 
abstract classes, <strong>Command</strong> or <strong>GridModelCommand</strong>, to customize the types of commands based on requirements.
</p>

<p>In this sample, two list boxes are added to reflect the &quot;Undo&quot; and &quot;Redo&quot; buffers. This buffer support can be enabled 
or disabled in Essential Grid as required.
</p>

<p>The following illustration shows the undo and redo buffers.</p>

<p><p align=center><img src="images/sample.png" alt="Undo Redo  screenshot" title="Undo Redo" /></p>

<p><strong>Features</strong></p>

<ul>
	<li> Undo-Redo support is enabled by setting the <strong>CommandStack.Enabled</strong> property to 
	<em>true</em>.</ul>

<p><font color="#8D2E1C"><pre>
    		this.gridControl1.CommandStack.Enabled = true;  </pre></font></p>

<ul><li> By using the functions of the <strong>GridModelCommandManager</strong> class, undo and redo tasks can be performed.</ul>

<p><font color="#8D2E1C"><pre>
    		this.gridControl1.CommandStack.Undo();
    		this.gridControl1.CommandStack.Redo();  </pre></font></p>
			
<ul><li> Methods are also available to begin, commit, and rollback transactions.</ul>	
</html>