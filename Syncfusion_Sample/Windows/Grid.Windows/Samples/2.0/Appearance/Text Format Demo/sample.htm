<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=windows-1252">
	<TITLE></TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.0  (Win32)">
	<META NAME="CREATED" CONTENT="20090102;1152271">
	<META NAME="CHANGEDBY" CONTENT="jisha j">
	<META NAME="CHANGED" CONTENT="20090102;1164985">
	<style type="text/css">
	.style1 {
		font-size: medium;
	}
	</style>
</HEAD>
<BODY LANG="en-US" DIR="LTR">
<H1>Text Format Demo</H1>
<P>This sample demonstrates formatting data
in a grid. The codes used in this sample illustrate number 
and date-time formatting. Code for validating data when
leaving the cell is also included. Essential Grid uses the . NET
Framework formatting support. This formatting is culture sensitive. 
</P>
<P ALIGN=CENTER><img src="images/sample.PNG" NAME="graphics1" ALT="Text Format screenshot" ALIGN=BOTTOM  BORDER=0></P>
<P><FONT SIZE=4><B>Features:</B></FONT></P>
<UL>
	<LI><P>The <STRONG>Minimum</STRONG>
	and <STRONG>Maximum</STRONG>
	properties of the <STRONG>ValidateValue</STRONG>
	can be set to restrict the values only to positive numbers.</P>
</UL>

</font>

<UL>
	<LI><P>This can also be set in
	one line of code as it is shown below for the validation (1-100).</P>
</UL>
<FONT SIZE=3>
<PRE STYLE="margin-bottom: 0.2in"><FONT COLOR="#8d2e1c">          model.RowStyles[rowIndex].ValidateValue = new GridCellValidateValueInfo(true, 1, 100, &quot;Please enter a number between 1 and 100!&quot;);</FONT>  </PRE>
<UL>
	<LI><P>By setting the <STRONG>StrictValueType
	</STRONG> property to <EM>false</EM>,
	strings can be entered into the double <STRONG>CellValueType</STRONG>.
	By default, <FONT SIZE=4>
	<STRONG>StrictValueType
	</STRONG></font>is <EM>true.</EM></P>
</UL>

<UL>
	<LI><P>To change the <STRONG>CellValueType</STRONG>
	when strings are entered for specified cells, the <STRONG>Style.Tag</STRONG>
	must be set to a string. This can be checked before changing <STRONG>CellValueType</STRONG>.
	<STRONG>SaveCellFormattedText</STRONG>
	carries the <STRONG>GridCellTextEventArgs</STRONG>
	instance and is triggered when leaving the cell. When you make use of it,
	<STRONG>CellValueType</STRONG>
	is changed to a string
	</P>
</UL>
<UL>
	<LI><P>In <STRONG>SaveCellFormattedText</STRONG>,
	<STRONG>e.Text </STRONG>is
	assigned to <STRONG>CellValue</STRONG>.<FONT SIZE=4>
</font><STRONG>CellValueType </STRONG>is
	also changed.</P>
</UL>

</BODY>
</HTML>