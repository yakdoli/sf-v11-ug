<html><h1>InteractiveCell Demo</h1>

<p><p>InteractiveCell Demo illustrates the usage of different controls as celltypes in grid cells. You will learn how to place 
linklabels, slider, Button edit control 
into cells. </p></p>

<p>Given below is an image of the sample.</p>

<p><p align=center><img src="images/sample.png" alt="Cell Types screenshot" title="Cell Types" /></p>

<p><i><b>CellButtons</b></i></p>
<UL>
	<LI><P>In general, a custom cell type requires a <STRONG>Model</STRONG>
	class and a <STRONG>Renderer</STRONG> class. The Model 
	class handles the serialization requirements for the control and
	creates the Renderer class. The Renderer 
	class handles the UI requirements of the cell, such as drawing and
	handling mouse actions. The cell button seen in this grid is a
	custom-cell type.</P>
</UL>
<p><i><b>OLE Container Cells</b></i></p>
<UL>
	<LI><P>This Custom Celltype will host as a ole container which by default displays 
        the icon of the associated file type. When the cell is activated through a click 
        the binded file will be opened by its default associated application</P>
    <LI>
        <P>The address of the file should be passed through the cell&#39;s <b>Style.Description
            </b>value. </P>
</UL>
<p><i><b>Link Label Cells</b></i></p>

<UL>
	<LI><P>This custom cell type runs the<STRONG> iexplore.exe </STRONG>file
	in the overridden<STRONG> OnMouseUp</STRONG> handler. The arguments
	are set by getting the string that is stored in the <STRONG>GridStyleInfo.Tag</STRONG>
	property. 
	</P>
	<LI><P ALIGN=LEFT>By overriding the <STRONG>OnMouseHoverEnter</STRONG>,
	<STRONG>OnMouseHoverLeave</STRONG>, and the <STRONG>OnDraw</STRONG>
	events, the link label is highlighted when hovering with the mouse pointer.
	</P>
</UL>
<p align="LEFT">
    <i><b>Slider Cells</b></i></p>
<UL>
	<LI><P>A custom slider cell is used to display a Slider control in
	the cell.</P>
	<LI><P><STRONG>SliderCellModel</STRONG>,
	and <STRONG>SliderCellRenderer</STRONG> classes are derived from
	<STRONG>GridGenericControlCellModel</STRONG> and
	<STRONG>GridGenericControlCellRenderer</STRONG> classes.</P>
	<LI><P>Two Windows Forms track bars are used by the cell renderer
	class - One for static drawing, and the other as an active
	current cell control. 
	</P>
	<LI><P>You can view either the active control or the control that is
	used for the static drawing, which is assigned to
	<STRONG>GridStyleInfo.Control</STRONG> in the
	<STRONG>SliderCellRenderer.OnDraw</STRONG> overridden method.</P>
	<LI><P>In<STRONG> </STRONG> the<STRONG> SliderStyleProperties</STRONG> 
	class, <STRONG>Minimum</STRONG>,
	<STRONG>Maximum</STRONG>, <STRONG>SmallChange</STRONG>, <STRONG>LargeChange</STRONG>,
	<STRONG>TickFrequency</STRONG>, <STRONG>TickStyle</STRONG>,<STRONG>
	</STRONG>and <STRONG>Orientation</STRONG> are the newly added style
	properties.</P>
	
</UL>
<p>
    <i><b>Button Edit Cell Demo</b></i></p>
<UL>
	<LI><P><STRONG>ButtonEditCellButton</STRONG> class is derived from
	the <STRONG>GridCellButton</STRONG> class, which is used to draw
	buttons in grid cells 
	</P>
	<LI><P><STRONG>ButtonEditStyleProperties</STRONG> class can be
	accessed to supply necessary style settings for <B>Button</B>
	controls</P>
	<LI><P><STRONG>ButtonEditCellButton</STRONG> class will let you
	create different<B> Button</B> controls such as buttons with images,
	buttons painted with colors, button faces with text, and buttons
	with borders. 
	</P>
	
	<LI><P>Apart from these classes, this sample also includes a <B>Cell
	Model </B>and <B>Cell Renderer</B> class, which can be used to
	create a custom cell type.</P>
</UL>


</html>