<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
.style2 {
	margin-left: 80px;
}
</style>
</head>

<h1>Stacked 100 Charts</h1>


<p>This sample illustrates stacked chart variants for area, bar, and column 
charts. </p>



<div align=center class="style1">
<TABLE id="Table1" >
<TR>

<TD align=center><b>Stacked Area 100 Chart</b></TD>

<TD>&nbsp;&nbsp;</TD>
<TD align=center><b>Stacked Bar 100 Chart</b></TD>
</TR>
    	
<TR>
  
<TD align=center><div align=center><img src="images/Sample2.png" alt= "StackedArea100 Chart"title=""/></div></TD>
<TD>&nbsp;&nbsp;</TD>
    		<TD align=center><div align=center><img src="images/Sample3.png" alt= "StackedBar100 Chart "title=""/></div></TD>
</TR>	</TABLE>

<TABLE id="Table2"  >

<TR>
<TD align=center><b>Stacked Column 100 Chart</b></TD>
</TR>
  
<TR>
<TD><div align=center><img src="images/Sample1.png" alt= "StackedColumn100 Chart "title=""/></div></TD>
</TR>
</TABLE></div>

<h3><strong>Features</strong></h3>
<p>One-hundred percent stacked chart variants are available for area, bar, and column chart types. As the name implies, data point values are converted to a percentage of the sum of the whole set 
of data points at a corresponding position in a different series.&nbsp;&nbsp;&nbsp; </p>
<ul class="style2"><li><b>Stacked chart variants</b><br>
<p>Stacked chart variants are created as shown in the following code. </p>
<font color="#8D2E1C"><pre><code>
<font color="#008000">//sets the Chart Type as Stacking Area</font>
this.chartControl1.Series[0].Type = ChartSeriesType.StackingArea100;
<font color="#008000">//sets the Chart Type as Stacking Bar</font>
this.chartControl1.Series[0].Type = ChartSeriesType.StackingBar100;
<font color="#008000">//sets the Chart Type as Stacking Column</font>
this.chartControl1.Series[0].Type = ChartSeriesType.StackingColumn100;
</code></pre></font></li></ul>
</html>