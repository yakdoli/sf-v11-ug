<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
</style>
</head>

<h1>Chart Drag and Drop</h1>

<p>This sample demonstrates dragging and dropping a data point to a new location 
within a plot.<p>

<div align=center><img src="images/sample.png" alt="Chart DragDrop Sample" title="" /></div>

<h3><strong>Features</strong></h3>
<p class="style1">The <b>ChartRegionMouseDown</b> event is is used to produce a selected series point. Using the 
chart area's <b>GetValueByPoint</b> method, you can retrieve the chart point and 
move it to a new location.</p>
<ul>
<font color="#8D2E1C"><pre><code>
private void chartControl1_ChartRegionMouseDown(object sender, Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs e)
{
	selectedDataPoint = new System.Drawing.Point();
	if (e.Region.Type == ChartRegionType.SeriesPoint)
	{
		selectedDataPoint = e.Point;
		this.currentRegion = e.Region;
		this.isDragging = true;
	}
}
</code></pre></font>
<p >The <b>ChartRegionMouseUp</b> event is used to get the new values of a chart point.

<font color="#8D2E1C"><pre><code>

private void chartControl1_ChartRegionMouseUp(object sender, Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs e)
{
    if (this.isDragging)
    {
        double newY = Math.Floor(this.chartControl1.ChartArea.GetValueByPoint(e.Point).YValues[0]);
        double newX = this.chartControl1.ChartArea.GetValueByPoint(e.Point).X;

        if (newY < 0 || newY >= 50 || newX < 0 || newX > 7)
            MessageBox.Show("Cannot drag outside chart bounds");
        else
        {
           this.chartControl1.Series[0].Points[this.currentRegion.PointIndex].YValues[0] = newY;
           this.chartControl1.Series[0].Points[this.currentRegion.PointIndex].X = newX;
        }
        this.chartControl1.Redraw(true);
    }
    this.chartControl1.Refresh();
}
</ul>
</code></pre></font>
</html>