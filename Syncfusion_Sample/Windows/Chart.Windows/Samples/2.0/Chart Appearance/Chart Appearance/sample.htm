<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
.style2 {
	margin-left: 80px;
}
</style>
</head>

<h1>Chart Appearance</h1>

<p>This sample shows how to customize the appearance of a chart control.</p>

<div align=center class="style1"><img src="images/sample.png" alt= "Chart Appearance "title=""/></div>
<p class="style1"><div align=center class="style1"><TABLE><TR>
		<TD align=center><b>Chart Appearance</b></TD>
	</TR>
		
		<tr><td style="height:5"> </td></tr>
		</TABLE></div>
<p class="style1"></p>

<h3><strong>Features</strong></h3>

<p>The appearance of the chart display area is customized through various 
properties, as shown below.</p>
<ul class="style1">
<li><h4>Border settings</h4>
<ul><li><b>Chart Border</b>
<p>Border style, border width, and border color of the chart area can be set using the 
code below.</p>
<font color="#8D2E1C"><pre><code>this.chartControl1.ChartArea.BorderStyle = BorderStyle.FixedSingle;
this.chartControl1.ChartArea.BorderWidth = 1;
this.chartControl1.ChartArea.BorderColor = Color.Black;
</code></pre></font></li>
</ul>
<ul>
<li>
<b>Chart Series Border</b>
<p>Dash style, border width, and border color of the series can be set as shown below.</p>
<font color="#8D2E1C"><pre><code>this.chartControl1.Series[i].Style.Border.DashStyle = DashStyle.Solid;
this.chartControl1.Series[i].Style.Border.Width = 1;
this.chartControl1.Series[i].Style.Border.Color = Color.Black;
</code></pre></font></li>
</ul>
</li>
</ul>
<ul class="style2"><li>
<h4>Chart Background</h4>
<p>The chart control's background image can be set either at run time or at design time using the <b>BackGroundImage</b> 
property. In addition, you can set an image for the chart area using the <strong>ChartAreaBackImage</strong> property.
<font color="#8D2E1C"><pre><code>this.chartControl1.ChartAreaBackImage = new Bitmap(filename);</code></pre></font></p>
</li>
</ul>

<ul class="style2">
<li>
<h4>Interior Color</h4><ul><li>
<p>The interior color of the chart can be modified using the following code snippets. </p>


<font color="#8D2E1C"><pre><code>
<font color="#008000">//Sets the back color of the entire chart control</font>
this.chartControl1.BackInterior = new Syncfusion.Drawing.BrushInfo(GradientStyle.Horizontal, Color.White, Color.White);


<font color="#008000">//Customizes the background of the rectangular region where the points are plotted</font>
this.chartControl1.ChartArea.BackInterior = new Syncfusion.Drawing.BrushInfo(Color.SkyBlue);<br />

<font color="#008000">// Set interior color of the chartarea.</font>
this.chartControl1.ChartInterior = new Syncfusion.Drawing.BrushInfo(GradientStyle.Horizontal, Color.PaleTurquoise, Color.LightBlue);
</code></pre></font></li></ul>
<p><ul><li>You can also set a solid color as the background of the chart control and 
	the chart area.</li></ul></p>
</ul>

<ul class="style2"><li><h4>Series 3-D</h4><p>
<p>The chart can be rendered in 3-D by enabling the <strong>Series3D</strong> property.</p></li>
<font color="#8D2E1C"><pre><code>this.chartControl1.Series3D = true;</code><pre></font></p></li></ul>

<ul class="style2"><li><h4>Chart Rotate</h4>
<p><ul><li>The rotation of an axis is handled by the <strong>Rotation</strong> property of the 
		chart area.
<font color="#8D2E1C"><pre><code>this.chartControl1.ChartArea.Rotation = 30;</code></pre></font></li></ul></p>
<p><ul><li>The depth of an axis can be adjusted using the <strong>Depth</strong> property of the 
		chart area.
<font color="#8D2E1C"><pre><code>this.chartControl1.ChartArea.Depth = 20;</code></pre></font></li></ul></p>
<p><ul><li>The spacing between each series can be adjusted using the <strong>SpacingBetweenSeries</strong> property of the
		<strong>ChartControl</strong> class.
<font color="#8D2E1C"><pre><code>this.chartControl1.SpacingBetweenSeries = 10;</code></pre></font></li></ul></p>
<p><ul><li>The tilt angle of a chart axis is adjusted by the <strong>Tilt</strong> property of the
		<strong>ChartControl </strong>class.
<font color="#8D2E1C"><pre><code>this.chartControl1.Tilt = 30;</code></pre></font></li></ul></p>
</li></ul>

<ul class="style2">
<li><h4>Chart Font Style</h4>

<p><ul><li><b>Display Text</b>
<p>The text displayed in a series can be shown or hidden using the <strong>Display Text</strong> property.
<font color="#8D2E1C"><pre><code>this.chartControl1.Series[i].Style.DisplayText = true;
</code></pre></font></li></ul></p>

<p><ul><li><b>Font Face</b>
<p>The font face of the text can be chosen from any one of the system-supported 
font faces using the <strong>Font</strong> property of the <strong>ChartStyleInfo</strong> class.
<font color="#8D2E1C"><pre><code>this.chartControl1.Series[i].Style.Font.Facename = "Times New Roman";
</code></pre></font>
</li></ul></p>
<p><ul><li><b>Font style</b>
<p>The font style of the series text can be changed by selecting any one of the 
different font styles using the <strong>FontStyle</strong> property of the
<strong>ChartFontInfo</strong> class.
<font color="#8D2E1C"><pre><code>this.chartControl1.Series[i].Style.Font.FontStyle = FontStyle.Bold;
</code></pre></font></li></ul></p>
<p><ul><li><b>Font Color</b>
<p>The font color of the series text can be changed by choosing any 
system-supported color from the <strong>FontColor</strong> property of the
<strong>ChartFontInfo</strong> class.
<font color="#8D2E1C"><pre><code>this.chartControl1.Series[i].Style.TextColor = Color.Black;
</code></pre></font></li></ul></p>
</ul>

<ul class="style2">
<li>
<b>Series Color Palette</b>
<p>The color palette of a series can be set to a predefined color or to any user-defined custom color. <br/>The 
code below is used to set custom colors. </p>
<p><font color="#8D2E1C"><pre><code>Color[] color = new Color[] { Color.Green, Color.Yellow, Color.Bisque };
this.chartControl1.Palette = ChartColorPalette.Custom;
this.chartControl1.Model.ColorModel.CustomColors = color;
</code></pre></font></p>
<p>A predefined color palette can be used as shown below.</p>
<p><font color="#8D2E1C"><pre><code>this.chartControl1.Palette = ChartColorPalette.GrayScale;</code></pre></font></p>

</li></ul>

<ul class="style2"><li>
<b>Symbol Shape</b>
<p>The series symbol shape is set using the code below. </p>
<p><font color="#8D2E1C"><pre><code>this.chartControl1.Series[0].Style.Symbol.Shape = ChartSymbolShape.Triangle;
</code></pre></font></p>
</li></ul>

<ul class="style2">
<li>
<b>Shadow</b>
<p>A chart-area shadow can be made visible, as shown below. </p>
<p><font color="#8D2E1C"><pre><code>this.chartControl1.ChartAreaShadow = true;</code></pre></font></p>
</li></ul>

</html>