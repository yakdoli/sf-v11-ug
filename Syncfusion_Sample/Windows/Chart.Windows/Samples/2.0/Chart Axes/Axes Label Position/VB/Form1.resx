<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label40.Text" xml:space="preserve">
    <value>This sample illustrates the customization option for Y-Axis individual label position whether right or left side of axis based on Y value. In this sample, if the export value  is positive, the nation label is rendering on left side of axis. if Y-value is negative , it is rendering on right side of axis. 


</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAClZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6Vl
        Qv+lZUL/pWVC/86rnf/Oq53/zqud/86rnf/Oq53/zqud/86rnf/Oq53/zqud/86rnf/Oq53/zqud/86r
        nf/Oq53/pWVC/6VlQv/Oq53//////+KZUf//xYz/4plR/z2w5f+M2///PbDl///////imVH//8WM/+KZ
        Uf89sOX/jNv//6VlQv+lZUL/zqud///////imVH//8WM/+KZUf89sOX/jNv//z2w5f//////4plR///F
        jP/imVH/PbDl/4zb//+lZUL/pWVC/86rnf//////4plR///FjP/imVH/PbDl/4zb//89sOX//////+KZ
        Uf//xYz/4plR/z2w5f+M2///pWVC/6VlQv/Oq53//////+KZUf//xYz/4plR/z2w5f+M2///PbDl////
        ///imVH//8WM/+KZUf89sOX/jNv//6VlQv+lZUL/zqud///////imVH//8WM/+KZUf89sOX/jNv//z2w
        5f//////4plR///FjP/imVH/PbDl/4zb//+lZUL/pWVC/86rnf//////4plR///FjP/imVH/PbDl/4zb
        //89sOX//////+KZUf//xYz/4plR/z2w5f+M2///pWVC/6VlQv/Oq53//////+KZUf//xYz/4plR/z2w
        5f+M2///PbDl///////imVH//8WM/+KZUf89sOX/jNv//6VlQv+lZUL/zqud///////imVH//8WM/+KZ
        Uf89sOX/PbDl/z2w5f//////4plR///FjP/imVH/PbDl/z2w5f+lZUL/pWVC/86rnf//////4plR///F
        jP/imVH//////////////////////+KZUf//xYz/4plR////////////pWVC/6VlQv/Oq53//////+KZ
        Uf/imVH/4plR///////////////////////imVH/4plR/+KZUf///////////6VlQv+lZUL/zqud////
        //////////////////////////////////////////////////////////////////+lZUL/pWVC/86r
        nf//////////////////////////////////////////////////////////////////////pWVC/6Vl
        Qv/Oq53//////////////////////////////////////////////////////////////////////6Vl
        Qv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6Vl
        Qv+lZUL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>