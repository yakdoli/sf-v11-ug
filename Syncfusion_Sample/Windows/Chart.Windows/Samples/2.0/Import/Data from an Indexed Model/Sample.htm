<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
</style>
</head>

<h1>Data from an Indexed Model</h1>

<p>This sample demonstrates how to retrieve chart data using an indexed model.</p>
<div align=center><img src="images/sample.png" alt="Chart Export Sample" title="" /></div>

<h3><strong>Features</strong></h3>
<p class="style1">Indexed-model data containing only &quot;Y&quot; values will be imported to the chart through the <b>StringIndexedModel</b> class, 
which implements the <b>IChartSeriesIndexedModel</b> interface.<p>
<ul>
<font color="#8D2E1C"><pre><code>
this.chartControl1.Indexed = true;			
<font color="#008000">//Initializes new chart series.</font>
ChartSeries series = new ChartSeries();
series.SeriesIndexedModelImpl = new StringIndexedModel(series, new double[]{68,49,72,51,63});
<font color="#008000">//Adds the series to the ChartSeriesCollection.</font>
this.chartControl1.Series.Add(series);

</code></pre></font>

<p>The <b>StringIndexedModel</b> class is used to pass data to the chart series.</p>
<font color="#8D2E1C">
<pre><code>
public class StringIndexedModel : IChartSeriesIndexedModel
{
   private double[] y;
   public StringIndexedModel(ChartSeries series, double[] y)
   {
	this.y = y;
   }
   public int Count 
   { 
        get
	{
	   return this.y.GetLength(0);
	}
   }
   public double[] GetY(int xIndex)
   {
	return new double[]{y[xIndex]};
   }
   public bool GetEmpty(int index)
   {
	return false;			
   }
   public event ListChangedEventHandler Changed;
}
</code></pre></font>
</ul>
</html>
