<html><h1>Data from CSV</h1>

<p>This sample demonstrates loading and displaying chart data from a CSV file.</p>
<div align=center><img src="images/sample.png" alt="Chart Export Sample" title="" /></div>

<h3><strong>Features</strong></h3>
<ul>
	<p>Essential Chart exposes a flexible data model, <b>ChartDataBindModel,</b> that can display data from any source (file, database, real time).
	</p>
	<p>The CSV file is first converted to a data set; <b>ChartDataBindModel</b> uses<b> 
t</b>his as the data source for populating data within a chart series.</p>
	<font color="#8D2E1C">
	<pre><code>
string fileName = WinFormsUtils.FindFile(@"..\..\..\..\..\Data\", "ChartData.csv");
OleDbConnection csvConn = new OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + Application.StartupPath + ";Extended Properties=\"Text;HDR=Yes;FMT=Delimited\"");
csvConn.Open();
<font color="#008000">//Query for retriving the data from the csv file.</font>
string query = "Select * From "+fileName;
OleDbCommand csvCommand = new OleDbCommand(query,csvConn);
OleDbDataReader csvReader = csvCommand.ExecuteReader(CommandBehavior.CloseConnection);
<font color="#008000">//Load the contents to a dataset.</font>
DataSet csvDataSet = ConvertToDataSet(csvReader, "CSVTable");
//Initializes new chart series.
ChartSeries series = new ChartSeries();
series.Name = tableName;            
model = new ChartDataBindModel(csvDataSet, "CSVTable");
model.XName = "X Value";
model.YNames = new string[]{"Y Value"};
series.SeriesModel = model;
//Adds the series to the ChartSeriesCollection.
this.chartControl1.Series.Add(series);                 
</code></pre>
	</font>
</ul>

</html>
