<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAClZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6Vl
        Qv+lZUL/pWVC/86rnf/Oq53/zqud/86rnf/Oq53/zqud/86rnf/Oq53/zqud/86rnf/Oq53/zqud/86r
        nf/Oq53/pWVC/6VlQv/Oq53//////+KZUf//xYz/4plR/z2w5f+M2///PbDl///////imVH//8WM/+KZ
        Uf89sOX/jNv//6VlQv+lZUL/zqud///////imVH//8WM/+KZUf89sOX/jNv//z2w5f//////4plR///F
        jP/imVH/PbDl/4zb//+lZUL/pWVC/86rnf//////4plR///FjP/imVH/PbDl/4zb//89sOX//////+KZ
        Uf//xYz/4plR/z2w5f+M2///pWVC/6VlQv/Oq53//////+KZUf//xYz/4plR/z2w5f+M2///PbDl////
        ///imVH//8WM/+KZUf89sOX/jNv//6VlQv+lZUL/zqud///////imVH//8WM/+KZUf89sOX/jNv//z2w
        5f//////4plR///FjP/imVH/PbDl/4zb//+lZUL/pWVC/86rnf//////4plR///FjP/imVH/PbDl/4zb
        //89sOX//////+KZUf//xYz/4plR/z2w5f+M2///pWVC/6VlQv/Oq53//////+KZUf//xYz/4plR/z2w
        5f+M2///PbDl///////imVH//8WM/+KZUf89sOX/jNv//6VlQv+lZUL/zqud///////imVH//8WM/+KZ
        Uf89sOX/PbDl/z2w5f//////4plR///FjP/imVH/PbDl/z2w5f+lZUL/pWVC/86rnf//////4plR///F
        jP/imVH//////////////////////+KZUf//xYz/4plR////////////pWVC/6VlQv/Oq53//////+KZ
        Uf/imVH/4plR///////////////////////imVH/4plR/+KZUf///////////6VlQv+lZUL/zqud////
        //////////////////////////////////////////////////////////////////+lZUL/pWVC/86r
        nf//////////////////////////////////////////////////////////////////////pWVC/6Vl
        Qv/Oq53//////////////////////////////////////////////////////////////////////6Vl
        Qv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6VlQv+lZUL/pWVC/6Vl
        Qv+lZUL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>