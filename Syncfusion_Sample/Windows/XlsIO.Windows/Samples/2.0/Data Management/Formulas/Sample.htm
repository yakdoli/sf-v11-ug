<h1>Formulas</h1>

<p>Formulas are entries in Excel that have an equation that calculates the value to
be displayed. A typical formula might contain cells, constants, and even functions. Essential XlsIO has support for reading and writing
formulas.</p>

<p style="font-size:large">Features:</p>
<ul>
<li>Writing array formulas</li>
<li>Writing Excel built-in formulas</li>
<li>Reading formula strings using XlsIO</li>
<li>Reading evaluated formulas using XlsIO</li>

</ul>
<p style="font-size:large">Interactive Features:</p>
<ul>
<li>Click <b>Read Formula</b> to view the computed formula and formula string in the text 
box.</li>
<li>Click <b>Write Formula</b> to view the worksheet with a formula.</li>
<li>All features in the preceding list are illustrated in this file.</li>
<li>Click <b>Close</b> to close the form.</li>
</ul>


<p><b>Note:</b> You cannot read the XlsIO-created formula without refreshing the formulas. You can
use <b>XlsIOCalcEngine</b> to do this.</p>

<p>Below are images of the output.</p>
<p><div align = "Center"><img src="images/writeformula.png" alt="XlsIO" title="" /></div></p>

<p><div align = "Center"><img src="images/readformula.png" alt="XlsIO" title="" /></div></p>

<p>Here is are some code snippets:</p>
<pre>

//Create Formula array
sheet.Range["A2"].Text = "Array formulas";
sheet.Range["B2:E2"].FormulaArray = "{10,20,30,40}";
sheet.Names.Add("ArrayRange",sheet.Range["B2:E2"]);

//Create Excel functions
sheet.Range["A9"].Text = "SUM(B3,C3)";
sheet.Range["B9"].Formula = "SUM(B3,C3)";

//Read computed Formula Value.
this.txtFomulaNumber.Text = sheet.Range["C1"].FormulaNumberValue.ToString();

//Read Formula
this.txtFormula.Text = sheet.Range["C1"].Formula;

</pre>