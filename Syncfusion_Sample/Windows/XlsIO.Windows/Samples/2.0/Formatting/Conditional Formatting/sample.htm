<h1>
    Conditional Formatting</h1>
<p>
    Microsoft Office Excel 2007 provides enhanced conditional formatting support. Conditional
    formatting allows you to apply formatting to one or more cells based on the value
    of the cell or the value of a formula. </p>
<p>
    XlsIO also supports applying more than three conditional formats to the same cell
    in XLSX, similar to Excel 2007. Note that it is not possible to apply more than
    three conditional formats in earlier versions of Excel.</p>

<p style="font-size:large">Features:</p>
<p>This sample demonstrates the following features:</p>
<ul>
<li>Writing conditional formatting on a range of cells</li>
<li>Advanced options of Excel--such as color scales, icon sets, and data bars</li>
</ul>
<p style="font-size:large">Interactive Features:</p>
<ul>
<li>Click <b>Create</b> to generate and view the document.</li>
<li>All features in the preceding list are illustrated in this file.</li>
</ul>

<p>
    Here is an image of the output file that shows three visualizations.</p>
<p>
    <div align="Center">
        <img src="images/CF.png" alt="XlsIO" title="" /></div>
</p>
<p>
    Here is a code snippet used to apply databars.</p>
<p>
    <pre>
IConditionalFormats formats = sheet.Range["C7:C46"].ConditionalFormats;
IConditionalFormat format = formats.AddCondition();
format.FormatType = ExcelCFType.DataBar;
IDataBar dataBar = format.DataBar;
dataBar.MinPoint.Type = ConditionValueType.LowestValue;
dataBar.MinPoint.Value = "0";
dataBar.MaxPoint.Type = ConditionValueType.HighestValue;
dataBar.MaxPoint.Value = "0";
dataBar.BarColor = Color.YellowGreen;

//Negative Value settings
dataBar.NegativeFillColor = Color.Pink;
dataBar.NegativeBorderColor = Color.WhiteSmoke;
dataBar.BarAxisColor = Color.Yellow;
dataBar.BorderColor = Color.WhiteSmoke;
dataBar.DataBarDirection = DataBarDirection.context;
dataBar.DataBarAxisPosition = DataBarAxisPosition.middle;
dataBar.HasGradientFill = true;
dataBar.ShowValue = false;
</pre>
</p>
