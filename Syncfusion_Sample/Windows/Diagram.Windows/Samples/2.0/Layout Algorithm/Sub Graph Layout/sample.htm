<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
</style>
</head>

<h1>Sub Graph Layout</h1>

<p>The "Sub-Graph Layout" sample demonstrates the <strong>SubgraphLayoutManager</strong> layout management class in Essential Diagram. 
It enables the sub-nodes of a diagram layout tree to have an orientation that is distinct from the parent node. 
The sub-graph orientation is specified using a SubgraphTreeLayoutManager's "SubgraphPreferredLayout" event, and this event are raised by the layout manager before positioning each set of sub-nodes in the graph. </p>

<p><div align=center><img src="images/sample.png" alt="Sub Graph Image" title="" /></div></p>

<p><strong>Features</strong></p>
<ul>
<li>	Horizontal Spacing - Sets the horizontal spacing between the adjacent nodes.</li>
<li>	Vertical Spacing - Sets the vertical spacing between the adjacent nodes.</li>
<li>	Top Margin - Sets the top margin of the layout manager.</li>
<li>	Left Margin - Sets the left margin of the layout manager.</li>
<li>	Different tree orientations that specifies how nodes are arranged.</li>
<ul>
	<li>	ToptoBottom - Places the parent nodes at the top and the child nodes are below the root node.</li>
	<li>	BottomtoTop - Places the parent nodes at the bottom and the child nodes above the root node.</li>
	<li>	LeftToRight - Places the parent nodes at the left and the child nodes on the right side of the root node.</li>
	<li>	RightToLeft - Places the parent nodes at the right and the child nodes on the left side of the root node.</li>
</ul>
<li>	RotationAngle - Sets the rotation angle for the layout manager.</li>
<li>	AutoLayout - Updates the layout of the model, automatically.</li>
</ul>
<ul>
<p>	To create the <strong>SubgraphLayoutManager</strong> with the tree rotation as &quot;TopToBottom&quot; (i.e.RotationAngle =0),  horizontal and vertical spacing as 20 and 50 respectively, use the following code.</p>
<p><font color="#8D2E1C"><pre>
			SubgraphTreeLayoutManager subLayout = new SubgraphTreeLayoutManager(this.diagram1.Model, 0, 20, 50);
            //Sets the SubgraphTreeLayoutManager as the responsible for updating the layout of the diagram.
            this.diagram1.LayoutManager = subLayout;
            // Updates the layout of the nodes in the model.
            this.diagram1.LayoutManager.UpdateLayout(null);
</pre></font></p></ul>

</html>