<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
</style>
</head>

<h1>Nodes</h1>
<p>The nodes sample illustrates the various types of nodes supported by Essential Diagram.
The <strong>Node</strong> is a base object on the diagram that can represent shapes, connectors, images, text box, and Windows Forms controls. </p>
<p>	You can create your own custom symbol programmatically by inheriting the predefined shapes or node classes. There is a utility called &quot;Symbol Designer&quot; which is used to design and save the custom symbols. The Symbol Designer utility is packed with the Essential Diagram and is available in the below location.</p>
<p>[C:\Program Files (x86)\Syncfusion\Essential Studio\X.X.X.X[eg:10.3.0.43]\Utilities\Diagram\Windows Forms\Symbol Designer\]</p>

<p><div align=center><img src="images/sample.png" alt="Nodes Image" title="" /></div></p>


<p><strong>Features</strong></p>
<ul>
<li>	The following list of predefined shapes is available in Essential Diagram.
<ul><li>	Rectangle</li>
<li>	RoundRect</li>
<li>	Ellipse</li>
<li>	Polygon</li>
<li>	ClosedCurve</li>
<li>	TextNode</li>
<li>	RichTextNode</li>
<li>	BitmapNode</li>
<li>	CurveNode</li>
<li>	SemiCircle</li>
<li>	Line</li>
<li>	Polyline</li>
<li>	Spline</li>
<li>	BezierCurve</li>
<li>	CircularArc</li>
<li>    PencilNode</li>
</ul>
<li>	You can change the properties of the nodes by using the properties provided in the property editor.</li></ul>
<ul> <p>To create a Node, refer to the following code.</p>
	<p><font color="#8D2E1C"><pre>      
			//Creating a rectangle node.
            Syncfusion.Windows.Forms.Diagram.Rectangle rect = new Syncfusion.Windows.Forms.Diagram.Rectangle(100, 25, 120, 75);
            //Sets the fill color of the node.
            rect.FillStyle.Color = Color.FromArgb(240, 242, 240);
            //Sets the fore color of the node.
            rect.FillStyle.ForeColor = Color.White;
            //Sets type of brush to create filled regions.
            rect.FillStyle.Type = FillStyleType.LinearGradient;
            //Sets color used to draw lines.
            rect.LineStyle.LineColor = Color.DarkGray;
            // Appends the given node to the model.
            diagram1.Model.AppendChild(rect);
	   </pre></font></p></ul>
</html>