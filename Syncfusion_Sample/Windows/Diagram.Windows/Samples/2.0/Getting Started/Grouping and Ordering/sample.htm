<html>

<head>
<style type="text/css">
.style1 {
	margin-left: 40px;
}
</style>
</head>

<h1>Grouping and Ordering</h1>
<p>This sample demonstrates the creation of group and how the diagram nodes are grouped/ungrouped. 
It also shows, how the nodes are ordered using the diagram commands such as BrignToFront, BringForward, SendToBack and SendBackward.</p>

<p><div align=center><img src="images/sample.png" alt="Grouping and ordering Image" title="" /></div></p>

<p><strong>Features</strong></p><ul>
<li>	Group - It groups the currently selected nodes in the diagram.</li>
<li>	Ungroup - It ungroups the currently selected nodes in the diagram.</li>
<li>BringToFront - Moves the selected nodes to the front.</li>
<li> BringForward - Moves the selected nodes forward.</li>
<li> SendBackward - Moves the selected nodes backward.</li>
<li> SendToBack - Moves back the selected nodes.</li>
</ul><ul>
<p>To create a group node with more than one child code, use the following code.</p>
<p><font color="#8D2E1C"><pre><code>
Syncfusion.Windows.Forms.Diagram.Rectangle rect = new Syncfusion.Windows.Forms.Diagram.Rectangle(100, 50, 100, 75);
            rect.FillStyle.Color = Color.FromArgb(242, 242, 242);
            rect.FillStyle.ForeColor = Color.White;
            rect.FillStyle.Type = FillStyleType.LinearGradient;
            rect.LineStyle.LineWidth = 1;
           

            Syncfusion.Windows.Forms.Diagram.RoundRect roundRect = new Syncfusion.Windows.Forms.Diagram.RoundRect(220, 0, 100, 75, MeasureUnits.Pixel);
            roundRect.FillStyle.Color = Color.FromArgb(242, 242, 242);
            roundRect.FillStyle.ForeColor = Color.White;
            roundRect.FillStyle.Type = FillStyleType.LinearGradient;
            roundRect.LineStyle.LineWidth = 1;

            // Initializes a new instance of the group node class.
            Group group = new Group();
            // Appends the given node to the collection of child nodes of the group node.
            group.AppendChild(rect);
            group.AppendChild(roundRect);
            //Adds the group node to the model.
            diagram1.Model.AppendChild(group);
</code></pre></font></p></ul>
<ul><p>To group the nodes, use the following code.</p>
<p><font color="#8D2E1C"><pre><code>
//Group the selected nodes
 diagram1.Controller.Group();
</code></pre></font></p></ul>


<ul><p>To ungroup the nodes, use the following code.</p>
<p><font color="#8D2E1C"><pre><code>
//Ungroup the selected nodes
 diagram1.Controller.UnGroup();
</code></pre></font></p></ul>


<ul><p>To bring the nodes to the front, use the following code.</p>
<p><font color="#8D2E1C"><pre><code>
//Brings the selected node to the front.
  diagram1.Controller.BringToFront();
</code></pre></font></p></ul>


<ul><p>To bring the nodes forward, use the following code.</p>
<p><font color="#8D2E1C"><pre><code>
//Brings the selected nodes forward.
 diagram1.Controller.BringForward();
</code></pre></font></p></ul>


<ul><p>To send the node backward, use the following code.</p>
<p><font color="#8D2E1C"><pre><code>
//Sends the selected node backward.
diagram1.Controller.SendBackward();
</code></pre></font></p></ul>


<ul><p>To send the node backward, use the following code.</p>
<p><font color="#8D2E1C"><pre><code>
//Sends the selected node to the back
  diagram1.Controller.SendToBack();
</code></pre></font></p></ul>
</ul>
</html>